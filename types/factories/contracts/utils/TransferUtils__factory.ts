/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TransferUtils,
  TransferUtilsInterface,
} from "../../../contracts/utils/TransferUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
] as const;

const _bytecode =
  "0x61030e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063beabacc81461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610244565b61005c565b005b8060000361006957505050565b600061007a84848462030d406100e4565b9050806100de576040517f979dc78000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8086166004830152841660248201526044810183905260640160405180910390fd5b50505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283918291891690869061017f908690610280565b60006040518083038160008787f1925050503d80600081146101bd576040519150601f19603f3d011682016040523d82523d6000602084013e6101c2565b606091505b5091509150816101d85760009350505050610213565b600081511180156101fa5750808060200190518101906101f891906102af565b155b1561020b5760009350505050610213565b600193505050505b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461023f57600080fd5b919050565b60008060006060848603121561025957600080fd5b6102628461021b565b92506102706020850161021b565b9150604084013590509250925092565b6000825160005b818110156102a15760208186018101518583015201610287565b506000920191825250919050565b6000602082840312156102c157600080fd5b815180151581146102d157600080fd5b939250505056fea2646970667358221220718c740db09140d4a00a8f3d4b6a0ea877214d0cba65a20f559137ecea04c8eb64736f6c63430008120033";

type TransferUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferUtils__factory extends ContractFactory {
  constructor(...args: TransferUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TransferUtils__factory {
    return super.connect(runner) as TransferUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferUtilsInterface {
    return new Interface(_abi) as TransferUtilsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferUtils {
    return new Contract(address, _abi, runner) as unknown as TransferUtils;
  }
}
