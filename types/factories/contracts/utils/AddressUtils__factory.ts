/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AddressUtils,
  AddressUtilsInterface,
} from "../../../contracts/utils/AddressUtils";

const _abi = [
  {
    inputs: [],
    name: "AddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TEST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "validEmpty",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806351d977a61460425780637ff8770014605c575b600080fd5b604a6103e881565b60405190815260200160405180910390f35b606b606736600460bc565b606d565b005b73ffffffffffffffffffffffffffffffffffffffff811660b9576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60006020828403121560cd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460f057600080fd5b939250505056fea2646970667358221220ca8de64c7059debf469899494610539dea2af86202460cdda742bbc94aeee51564736f6c63430008120033";

type AddressUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressUtils__factory extends ContractFactory {
  constructor(...args: AddressUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AddressUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddressUtils__factory {
    return super.connect(runner) as AddressUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressUtilsInterface {
    return new Interface(_abi) as AddressUtilsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AddressUtils {
    return new Contract(address, _abi, runner) as unknown as AddressUtils;
  }
}
