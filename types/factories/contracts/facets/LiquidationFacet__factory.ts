/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquidationFacet,
  LiquidationFacetInterface,
} from "../../../contracts/facets/LiquidationFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "CallLiabilityCleanNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleAccess",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cleanId",
        type: "uint256",
      },
    ],
    name: "LiabilityCleanSuccessful",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cleanId",
        type: "uint256",
      },
    ],
    name: "callLiabilityClean",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCleanInfos",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "liabilityTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "liabilities",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "collaterals",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "collateralsAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct LiabilityClean.LiabilityCleanInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getInsuranceFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "liquidationAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "liabilityToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liability",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "payTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "payAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ILiquidation.CleanLiabilityParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "liquidationLiability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "liquidationPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611784806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ac9deaa411610050578063ac9deaa4146100cb578063c0828713146100de578063d96faa28146100f157600080fd5b80632358072c146100775780635a536f8f1461009557806367180d0c146100aa575b600080fd5b61007f610104565b60405161008c9190610d94565b60405180910390f35b6100a86100a3366004610f08565b61019a565b005b6100bd6100b8366004610f5d565b6103bb565b60405190815260200161008c565b6100a86100d9366004610f96565b610511565b6100a86100ec366004610fd1565b610640565b6100a86100ff366004611004565b610742565b606073__$4ad7ebe7c986528cfaff5d11eb4a0ffa90$__63b45cb6b26040518163ffffffff1660e01b8152600401600060405180830381865af415801561014f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610195919081019061129b565b905090565b6101c37f4b45455045520000000000000000000000000000000000000000000000000000610bef565b60005a6040517f7532d8bc00000000000000000000000000000000000000000000000000000000815290915073__$76a505dbd6210c6de5172a9e6577e0d579$__90637532d8bc9061021b908690869060040161134c565b60006040518083038186803b15801561023357600080fd5b505af4158015610247573d6000803e3d6000fd5b50506040517f36f9339300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716600482015273__$32adf8695f5daf445be469a7fd8cffdf8b$__92506336f9339391506024015b60006040518083038186803b1580156102c557600080fd5b505af41580156102d9573d6000803e3d6000fd5b5050505073__$76a505dbd6210c6de5172a9e6577e0d579$__63e52ed3656040518163ffffffff1660e01b815260040160006040518083038186803b15801561032157600080fd5b505af4158015610335573d6000803e3d6000fd5b50506040517f1f10eda40000000000000000000000000000000000000000000000000000000081526004810184905273__$1af6d17e273104ca3ca5016ca475f591a0$__9250631f10eda4915060240160006040518083038186803b15801561039d57600080fd5b505af41580156103b1573d6000803e3d6000fd5b5050505050505050565b6040517f2f40e73400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260009073__$8095a854f53b8cd566db1efd1a12f91e07$__90632f40e73490602401602060405180830381865af415801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906113d3565b6040517f831fb957000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff8316602482015273__$8095a854f53b8cd566db1efd1a12f91e07$__9063831fb95790604401602060405180830381865af41580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906113d3565b9392505050565b61053a7f4b45455045520000000000000000000000000000000000000000000000000000610bef565b60005a6040517f892b96c800000000000000000000000000000000000000000000000000000000815290915073__$32adf8695f5daf445be469a7fd8cffdf8b$__9063892b96c89061059090859060040161149e565b60006040518083038186803b1580156105a857600080fd5b505af41580156105bc573d6000803e3d6000fd5b50506040517f1f10eda40000000000000000000000000000000000000000000000000000000081526004810184905273__$1af6d17e273104ca3ca5016ca475f591a0$__9250631f10eda4915060240160006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050505050565b6106697f4b45455045520000000000000000000000000000000000000000000000000000610bef565b60005a6040517f7532d8bc00000000000000000000000000000000000000000000000000000000815290915073__$76a505dbd6210c6de5172a9e6577e0d579$__90637532d8bc906106c1908690869060040161134c565b60006040518083038186803b1580156106d957600080fd5b505af41580156106ed573d6000803e3d6000fd5b50506040517fa9ccf5f70000000000000000000000000000000000000000000000000000000081526004810187905273__$32adf8695f5daf445be469a7fd8cffdf8b$__925063a9ccf5f791506024016102ad565b6040517f310a0e410000000000000000000000000000000000000000000000000000000081526004810182905260009073__$4ad7ebe7c986528cfaff5d11eb4a0ffa90$__9063310a0e4190602401600060405180830381865af41580156107ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107f4919081019061158e565b805190915073ffffffffffffffffffffffffffffffffffffffff1661084d576040517f527de131000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b60005b8160400151518110156109a45773__$ae0937d060466c56d4bdd1eafaed47a473$__63ef59a9d16040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001856040015185815181106108b4576108b46115c3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168152602001856060015185815181106108ed576108ed6115c3565b602002602001015181526020016000600381111561090d5761090d6115f2565b815260006020909101526040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526109509190600401611621565b602060405180830381865af415801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906116b0565b508061099c816116cd565b915050610850565b5060005b816080015151811015610b355773__$8526888d218a843cc53a77a3ceb13f6b1f$__6385e2b8803073ffffffffffffffffffffffffffffffffffffffff16631f7592ea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e91906116b0565b84608001518481518110610a5457610a546115c3565b6020026020010151338660a001518681518110610a7357610a736115c3565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff94851660048201529284166024840152921660448201526064810191909152608401602060405180830381865af4158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b22919061172c565b5080610b2d816116cd565b9150506109a8565b506040517ffc3d7d990000000000000000000000000000000000000000000000000000000081526004810183905273__$4ad7ebe7c986528cfaff5d11eb4a0ffa90$__9063fc3d7d999060240160006040518083038186803b158015610b9a57600080fd5b505af4158015610bae573d6000803e3d6000fd5b505050507f9658b573a066e713f2cff0b7a9e1d3b1c6395ce9379f271c4c3fa96552b9904f82604051610be391815260200190565b60405180910390a15050565b610bf93382610c3b565b610c38576040517fb5f4383400000000000000000000000000000000000000000000000000000000815233600482015260248101829052604401610844565b50565b600080610c46610c93565b73ffffffffffffffffffffffffffffffffffffffff85166000908152602082905260409020909150610c8b90846000818152600183016020526040812054151561050a565b949350505050565b600080604051602001610cd7906020808252601e908201527f78797a2e656c66692e73746f726167652e416363657373436f6e74726f6c0000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b600081518084526020808501945080840160005b83811015610d5957815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610d27565b509495945050505050565b600081518084526020808501945080840160005b83811015610d5957815187529582019590820190600101610d78565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e8c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160c073ffffffffffffffffffffffffffffffffffffffff82511685528882015189860152878201518189870152610e2582870182610d13565b91505060608083015186830382880152610e3f8382610d64565b9250505060808083015186830382880152610e5a8382610d13565b9250505060a08083015192508582038187015250610e788183610d64565b968901969450505090860190600101610dbb565b509098975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c3857600080fd5b60008083601f840112610ece57600080fd5b50813567ffffffffffffffff811115610ee657600080fd5b6020830191508360208260071b8501011115610f0157600080fd5b9250929050565b600080600060408486031215610f1d57600080fd5b8335610f2881610e9a565b9250602084013567ffffffffffffffff811115610f4457600080fd5b610f5086828701610ebc565b9497909650939450505050565b60008060408385031215610f7057600080fd5b8235610f7b81610e9a565b91506020830135610f8b81610e9a565b809150509250929050565b600060208284031215610fa857600080fd5b813567ffffffffffffffff811115610fbf57600080fd5b820160a0818503121561050a57600080fd5b600080600060408486031215610fe657600080fd5b83359250602084013567ffffffffffffffff811115610f4457600080fd5b60006020828403121561101657600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561106f5761106f61101d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110bc576110bc61101d565b604052919050565b600067ffffffffffffffff8211156110de576110de61101d565b5060051b60200190565b80516110f381610e9a565b919050565b600082601f83011261110957600080fd5b8151602061111e611119836110c4565b611075565b82815260059290921b8401810191818101908684111561113d57600080fd5b8286015b8481101561116157805161115481610e9a565b8352918301918301611141565b509695505050505050565b600082601f83011261117d57600080fd5b8151602061118d611119836110c4565b82815260059290921b840181019181810190868411156111ac57600080fd5b8286015b8481101561116157805183529183019183016111b0565b600060c082840312156111d957600080fd5b6111e161104c565b90506111ec826110e8565b815260208201516020820152604082015167ffffffffffffffff8082111561121357600080fd5b61121f858386016110f8565b6040840152606084015191508082111561123857600080fd5b6112448583860161116c565b6060840152608084015191508082111561125d57600080fd5b611269858386016110f8565b608084015260a084015191508082111561128257600080fd5b5061128f8482850161116c565b60a08301525092915050565b600060208083850312156112ae57600080fd5b825167ffffffffffffffff808211156112c657600080fd5b818501915085601f8301126112da57600080fd5b81516112e8611119826110c4565b81815260059190911b8301840190848101908883111561130757600080fd5b8585015b8381101561133f578051858111156113235760008081fd5b6113318b89838a01016111c7565b84525091860191860161130b565b5098975050505050505050565b6020808252818101839052600090604080840186845b878110156113c657813561137581610e9a565b73ffffffffffffffffffffffffffffffffffffffff9081168452828601359061139d82610e9a565b168386015281840135848401526060808301359084015260809283019290910190600101611362565b5090979650505050505050565b6000602082840312156113e557600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261142157600080fd5b830160208101925035905067ffffffffffffffff81111561144157600080fd5b8060051b3603821315610f0157600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561148557600080fd5b8260051b80836020870137939093016020019392505050565b6000602080835260c0830184356114b481610e9a565b73ffffffffffffffffffffffffffffffffffffffff9081168584015285830135906114de82610e9a565b8082166040870152604087013560608701526114fd60608801886113ec565b60a0608089015293849052929150600060e087015b8382101561153b57843561152581610e9a565b8316815293850193600191909101908501611512565b61154860808a018a6113ec565b965094507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08882030160a0890152611581818787611453565b9998505050505050505050565b6000602082840312156115a057600080fd5b815167ffffffffffffffff8111156115b757600080fd5b610c8b848285016111c7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060a08201905073ffffffffffffffffffffffffffffffffffffffff8084511683528060208501511660208401525060408301516040830152606083015160048110611697577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8060608401525060808301511515608083015292915050565b6000602082840312156116c257600080fd5b815161050a81610e9a565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611725577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561173e57600080fd5b8151801515811461050a57600080fdfea2646970667358221220f6852f4b2ada90247e4f841f405fe07aaeefb70c83131a56bc43f460c209a0d664736f6c63430008120033";

type LiquidationFacetConstructorParams =
  | [linkLibraryAddresses: LiquidationFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LiquidationFacet__factory extends ContractFactory {
  constructor(...args: LiquidationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LiquidationFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LiquidationFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4ad7ebe7c986528cfaff5d11eb4a0ffa90\\$__", "g"),
      linkLibraryAddresses[
        "contracts/storage/LiabilityClean.sol:LiabilityClean"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$76a505dbd6210c6de5172a9e6577e0d579\\$__", "g"),
      linkLibraryAddresses["contracts/process/OracleProcess.sol:OracleProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$32adf8695f5daf445be469a7fd8cffdf8b\\$__", "g"),
      linkLibraryAddresses[
        "contracts/process/LiquidationProcess.sol:LiquidationProcess"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1af6d17e273104ca3ca5016ca475f591a0\\$__", "g"),
      linkLibraryAddresses["contracts/process/GasProcess.sol:GasProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8095a854f53b8cd566db1efd1a12f91e07\\$__", "g"),
      linkLibraryAddresses["contracts/storage/InsuranceFund.sol:InsuranceFund"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ae0937d060466c56d4bdd1eafaed47a473\\$__", "g"),
      linkLibraryAddresses["contracts/process/AssetsProcess.sol:AssetsProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8526888d218a843cc53a77a3ceb13f6b1f\\$__", "g"),
      linkLibraryAddresses["contracts/process/VaultProcess.sol:VaultProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LiquidationFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquidationFacet__factory {
    return super.connect(runner) as LiquidationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationFacetInterface {
    return new Interface(_abi) as LiquidationFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidationFacet {
    return new Contract(address, _abi, runner) as unknown as LiquidationFacet;
  }
}

export interface LiquidationFacetLibraryAddresses {
  ["contracts/storage/LiabilityClean.sol:LiabilityClean"]: string;
  ["contracts/process/OracleProcess.sol:OracleProcess"]: string;
  ["contracts/process/LiquidationProcess.sol:LiquidationProcess"]: string;
  ["contracts/process/GasProcess.sol:GasProcess"]: string;
  ["contracts/storage/InsuranceFund.sol:InsuranceFund"]: string;
  ["contracts/process/AssetsProcess.sol:AssetsProcess"]: string;
  ["contracts/process/VaultProcess.sol:VaultProcess"]: string;
}
