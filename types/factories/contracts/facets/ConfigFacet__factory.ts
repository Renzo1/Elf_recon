/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConfigFacet,
  ConfigFacetInterface,
} from "../../../contracts/facets/ConfigFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "wrapperToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "mintGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeIncreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeDecreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateMarginGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateLeverageGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "claimRewardsGasFeeLimit",
                type: "uint256",
              },
            ],
            internalType: "struct AppConfig.ChainConfig",
            name: "chainConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "tradeTokens",
                type: "address[]",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isSupportCollateral",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "precision",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "discount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "interestRateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct AppTradeTokenConfig.TradeTokenConfig[]",
                name: "tradeTokenConfigs",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "minOrderMarginUSD",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "availableCollateralRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "crossLtvLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxMaintenanceMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFundingBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeUsdPoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceProfitFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceLiquidityFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "swapSlipperTokenFactor",
                type: "uint256",
              },
            ],
            internalType: "struct AppTradeConfig.TradeConfig",
            name: "tradeConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "collateralProtectFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrecisionMultiple",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolRewardsIntervalLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minApr",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxApr",
                type: "uint256",
              },
            ],
            internalType: "struct AppPoolConfig.StakeConfig",
            name: "stakeConfig",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "uniswapRouter",
            type: "address",
          },
        ],
        internalType: "struct IConfig.CommonConfigParams",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
    ],
    name: "getPoolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "redeemFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolPnlRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledBaseTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledStableTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolStableTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolStableTokenLossLimit",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "assetTokens",
            type: "address[]",
          },
        ],
        internalType: "struct AppPoolConfig.LpPoolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "getSymbolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tickSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "openFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxLongOpenInterestCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxShortOpenInterestCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longShortRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longShortOiBottomLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AppConfig.SymbolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdPoolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "poolLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "redeemFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledRatioLimit",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "supportStableTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "stableTokensBorrowingInterestRate",
            type: "uint256[]",
          },
        ],
        internalType: "struct AppPoolConfig.UsdPoolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "wrapperToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "mintGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeIncreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeDecreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateMarginGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateLeverageGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "claimRewardsGasFeeLimit",
                type: "uint256",
              },
            ],
            internalType: "struct AppConfig.ChainConfig",
            name: "chainConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "tradeTokens",
                type: "address[]",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isSupportCollateral",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "precision",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "discount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "interestRateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct AppTradeTokenConfig.TradeTokenConfig[]",
                name: "tradeTokenConfigs",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "minOrderMarginUSD",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "availableCollateralRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "crossLtvLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxMaintenanceMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFundingBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeUsdPoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceProfitFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceLiquidityFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "swapSlipperTokenFactor",
                type: "uint256",
              },
            ],
            internalType: "struct AppTradeConfig.TradeConfig",
            name: "tradeConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "collateralProtectFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrecisionMultiple",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolRewardsIntervalLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minApr",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxApr",
                type: "uint256",
              },
            ],
            internalType: "struct AppPoolConfig.StakeConfig",
            name: "stakeConfig",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "uniswapRouter",
            type: "address",
          },
        ],
        internalType: "struct IConfig.CommonConfigParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseInterestRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolLiquidityLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolPnlRatioLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unsettledBaseTokenRatioLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unsettledStableTokenRatioLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolStableTokenRatioLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolStableTokenLossLimit",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "assetTokens",
                type: "address[]",
              },
            ],
            internalType: "struct AppPoolConfig.LpPoolConfig",
            name: "config",
            type: "tuple",
          },
        ],
        internalType: "struct IConfig.LpPoolConfigParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maxLeverage",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tickSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "openFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "closeFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxLongOpenInterestCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxShortOpenInterestCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longShortRatioLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longShortOiBottomLimit",
                type: "uint256",
              },
            ],
            internalType: "struct AppConfig.SymbolConfig",
            name: "config",
            type: "tuple",
          },
        ],
        internalType: "struct IConfig.SymbolConfigParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setSymbolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "setUniswapRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "poolLiquidityLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unsettledRatioLimit",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "supportStableTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "stableTokensBorrowingInterestRate",
                type: "uint256[]",
              },
            ],
            internalType: "struct AppPoolConfig.UsdPoolConfig",
            name: "config",
            type: "tuple",
          },
        ],
        internalType: "struct IConfig.UsdPoolConfigParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setUsdPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lpVault",
            type: "address",
          },
          {
            internalType: "address",
            name: "tradeVault",
            type: "address",
          },
          {
            internalType: "address",
            name: "portfolioVault",
            type: "address",
          },
        ],
        internalType: "struct IConfig.VaultConfigParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setVaultConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806368b5f86b11610076578063c3f909d41161005b578063c3f909d414610155578063e1be37bd1461016a578063f29486a1146101de57600080fd5b806368b5f86b1461012f578063bea9849e1461014257600080fd5b80634ee37b1c116100a75780634ee37b1c146100eb5780634f42ce05146100fe578063659d67bb1461011c57600080fd5b80632544cc2d146100c35780633b9d78fc146100d8575b600080fd5b6100d66100d1366004610b58565b6101fe565b005b6100d66100e6366004610b94565b6102aa565b6100d66100f9366004610bad565b610377565b6101066103f0565b6040516101139190610c39565b60405180910390f35b6100d661012a366004610ce7565b6104bd565b6100d661013d366004610cf9565b610536565b6100d6610150366004610d66565b6105af565b61015d61063e565b6040516101139190610ed9565b61017d610178366004611012565b6106d5565b6040516101139190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6101f16101ec366004610d66565b6107b1565b604051610113919061102b565b6102277f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b6040517f8e34bdc100000000000000000000000000000000000000000000000000000000815273__$c06d506426af55c412c71c91137196f65b$__90638e34bdc190610277908490600401611387565b60006040518083038186803b15801561028f57600080fd5b505af41580156102a3573d6000803e3d6000fd5b5050505050565b6102d37f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b604080517f5a19ab070000000000000000000000000000000000000000000000000000000081528235600482015260208301356024820152908201356044820152606082013560648201526080820135608482015260a082013560a482015260c082013560c482015260e082013560e482015261010082013561010482015273__$c06d506426af55c412c71c91137196f65b$__90635a19ab079061012401610277565b6103a07f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b6040517fb4d93e3200000000000000000000000000000000000000000000000000000000815273__$c06d506426af55c412c71c91137196f65b$__9063b4d93e32906102779084906004016114cf565b6104296040518060c001604052806000815260200160008152602001600081526020016000815260200160608152602001606081525090565b73__$c06d506426af55c412c71c91137196f65b$__634f42ce056040518163ffffffff1660e01b8152600401600060405180830381865af4158015610472573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104b89190810190611803565b905090565b6104e67f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b6040517fa9f3f09100000000000000000000000000000000000000000000000000000000815273__$c06d506426af55c412c71c91137196f65b$__9063a9f3f091906102779084906004016118bc565b61055f7f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b6040517f47da0aa700000000000000000000000000000000000000000000000000000000815273__$c06d506426af55c412c71c91137196f65b$__906347da0aa79061027790849060040161191b565b6105d87f434f4e46494700000000000000000000000000000000000000000000000000006108cb565b6040517fbea9849e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015273__$c06d506426af55c412c71c91137196f65b$__9063bea9849e90602401610277565b6106466109fb565b73__$c06d506426af55c412c71c91137196f65b$__63c3f909d46040518163ffffffff1660e01b8152600401600060405180830381865af415801561068f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104b89190810190611c8c565b61071d60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517fe1be37bd0000000000000000000000000000000000000000000000000000000081526004810183905273__$c06d506426af55c412c71c91137196f65b$__9063e1be37bd9060240161010060405180830381865af4158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab9190611da2565b92915050565b610807604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040517ff29486a100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015273__$c06d506426af55c412c71c91137196f65b$__9063f29486a190602401600060405180830381865af4158015610885573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107ab9190810190611e32565b6108d5338261091b565b610918576040517fb5f438340000000000000000000000000000000000000000000000000000000081523360048201526024810182905260440160405180910390fd5b50565b600080610926610960565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260208290526040902090915061095890846109e0565b949350505050565b6000806040516020016109a4906020808252601e908201527f78797a2e656c66692e73746f726167652e416363657373436f6e74726f6c0000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b600081815260018301602052604081205415155b9392505050565b6040518060800160405280610a6b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001610af0604051806102000160405280606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001610b4b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152600060209091015290565b600060208284031215610b6a57600080fd5b813567ffffffffffffffff811115610b8157600080fd5b82016102a081850312156109f457600080fd5b60006101208284031215610ba757600080fd5b50919050565b600060208284031215610bbf57600080fd5b813567ffffffffffffffff811115610bd657600080fd5b8201602081850312156109f457600080fd5b600081518084526020808501945080840160005b83811015610c2e57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610bfc565b509495945050505050565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160c060a0850152610c7c60e0850182610be8565b60a08601518582037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160c0870152805180835290840192506000918401905b80831015610cdc5783518252928401926001929092019190840190610cbc565b509695505050505050565b600060608284031215610ba757600080fd5b600060208284031215610d0b57600080fd5b813567ffffffffffffffff811115610d2257600080fd5b8201604081850312156109f457600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461091857600080fd5b8035610d6181610d34565b919050565b600060208284031215610d7857600080fd5b81356109f481610d34565b600081518084526020808501945080840160005b83811015610c2e578151805115158852838101518489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0808201519089015260e0808201519089015261010090810151908801526101209096019590820190600101610d97565b60006102008251818552610e1f82860182610be8565b91505060208301518482036020860152610e398282610d83565b60408581015190870152606080860151908701526080808601519087015260a0808601519087015260c0808601519087015260e08086015190870152610100808601519087015261012080860151908701526101408086015190870152610160808601519087015261018080860151908701526101a080860151908701526101c080860151908701526101e0948501519490950193909352509192915050565b602081526000825173ffffffffffffffffffffffffffffffffffffffff8151166020840152602081015160408401526040810151606084015260608101516080840152608081015160a084015260a081015160c084015260c081015160e084015260e081015161010081818601528083015161012086015250505060208301516102a080610140850152610f716102c0850183610e09565b60408681015180516101608801526020810151610180880152908101516101a087015260608101516101c087015260808101516101e087015260a081015161020087015260c081015161022087015260e081015161024087015261010081015161026087015261012081015161028087015290925050606085015173ffffffffffffffffffffffffffffffffffffffff8116858301525b5090949350505050565b60006020828403121561102457600080fd5b5035919050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260c082015160e0820152600060e0830151610100818185015280850151915050610120818185015280850151915050610140808185015250610958610160840182610be8565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe018336030181126110e257600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261112057600080fd5b830160208101925035905067ffffffffffffffff81111561114057600080fd5b8060051b360382131561115257600080fd5b9250929050565b8183526000602080850194508260005b85811015610c2e57813561117c81610d34565b73ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611169565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126111d957600080fd5b830160208101925035905067ffffffffffffffff8111156111f957600080fd5b6101208102360382131561115257600080fd5b801515811461091857600080fd5b8183526000602080850194508260005b85811015610c2e57813561123d8161120c565b15158752818301358388015260408083013590880152606080830135908801526080808301359088015260a0808301359088015260c0808301359088015260e080830135908801526101008083013590880152610120968701969091019060010161122a565b60006102006112b283846110eb565b8286526112c28387018284611159565b925050506112d360208401846111a4565b85830360208701526112e683828461121a565b60408681013590880152606080870135908801526080808701359088015260a0808701359088015260c0808701359088015260e08087013590880152610100808701359088015261012080870135908801526101408087013590880152610160808701359088015261018080870135908801526101a080870135908801526101c080870135908801526101e095860135959096019490945250929392505050565b602081526000823561139881610d34565b73ffffffffffffffffffffffffffffffffffffffff8116602084015250602083013560408301526040830135606083015260608301356080830152608083013560a083015260a083013560c083015260c083013560e083015261010060e0840135818401526101208185013581850152611414818601866110ae565b9150506102a061014081818601526114306102c08601846112a3565b8682018035610160880152602081013561018088015260408101356101a088015260608101356101c088015260808101356101e088015260a081013561020088015260c081013561022088015260e081013561024088015261010081013561026088015261012001356102808701529250506114af6102808601610d56565b73ffffffffffffffffffffffffffffffffffffffff811685830152611008565b6000602080835283357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4185360301811261150857600080fd5b848101905081828501528035604085015281810135606085015260408101356080850152606081013560a085015261154360808201826110eb565b60c08087015261155861010087018284611159565b91505061156860a08301836110eb565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08683030160e08701528282527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115c457600080fd5b8260051b92508281858401375001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561162c5761162c6115da565b60405290565b604051610120810167ffffffffffffffff8111828210171561162c5761162c6115da565b604051610200810167ffffffffffffffff8111828210171561162c5761162c6115da565b604051610140810167ffffffffffffffff8111828210171561162c5761162c6115da565b6040516080810167ffffffffffffffff8111828210171561162c5761162c6115da565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611708576117086115da565b604052919050565b600067ffffffffffffffff82111561172a5761172a6115da565b5060051b60200190565b8051610d6181610d34565b600082601f83011261175057600080fd5b8151602061176561176083611710565b6116c1565b82815260059290921b8401810191818101908684111561178457600080fd5b8286015b84811015610cdc57805161179b81610d34565b8352918301918301611788565b600082601f8301126117b957600080fd5b815160206117c961176083611710565b82815260059290921b840181019181810190868411156117e857600080fd5b8286015b84811015610cdc57805183529183019183016117ec565b60006020828403121561181557600080fd5b815167ffffffffffffffff8082111561182d57600080fd5b9083019060c0828603121561184157600080fd5b611849611609565b8251815260208301516020820152604083015160408201526060830151606082015260808301518281111561187d57600080fd5b6118898782860161173f565b60808301525060a0830151828111156118a157600080fd5b6118ad878286016117a8565b60a08301525095945050505050565b6060810182356118cb81610d34565b73ffffffffffffffffffffffffffffffffffffffff90811683526020840135906118f482610d34565b908116602084015260408401359061190b82610d34565b8082166040850152505092915050565b602081526000823561192c81610d34565b73ffffffffffffffffffffffffffffffffffffffff811660208401525060208301357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec184360301811261197e57600080fd5b83810190506040808401528035606084015260208101356080840152604081013560a0840152606081013560c0840152608081013560e084015261010060a08201358185015261012060c08301358186015261014060e084013581870152828401356101608701526119f2828501856110eb565b94509250806101808701525050611a0e6101a085018383611159565b95945050505050565b8051610d618161120c565b600082601f830112611a3357600080fd5b81516020611a4361176083611710565b8281526101209283028501820192828201919087851115611a6357600080fd5b8387015b85811015611aee5781818a031215611a7f5760008081fd5b611a87611632565b611a9082611a17565b8152818601518682015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0808301519082015261010080830151908201528452928401928101611a67565b5090979650505050505050565b60006102008284031215611b0e57600080fd5b611b16611656565b9050815167ffffffffffffffff80821115611b3057600080fd5b611b3c8583860161173f565b83526020840151915080821115611b5257600080fd5b50611b5f84828501611a22565b60208301525060408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a08083015181830152506101c08083015181830152506101e080830151818301525092915050565b60006101408284031215611c1a57600080fd5b611c2261167a565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525092915050565b600060208284031215611c9e57600080fd5b815167ffffffffffffffff80821115611cb657600080fd5b908301908185036102a0811215611ccc57600080fd5b611cd461169e565b61012080831215611ce457600080fd5b611cec611632565b9250611cf785611734565b83526020850151602084015260408501516040840152606085015160608401526080850151608084015260a085015160a084015260c085015160c084015260e085015160e08401526101008086015181850152508282528085015192505082821115611d6257600080fd5b611d6e87838601611afb565b6020820152611d81876101408601611c07565b6040820152611d936102808501611734565b60608201529695505050505050565b6000610100808385031215611db657600080fd5b6040519081019067ffffffffffffffff82118183101715611dd957611dd96115da565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b600060208284031215611e4457600080fd5b815167ffffffffffffffff80821115611e5c57600080fd5b908301906101408286031215611e7157600080fd5b611e7961167a565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015183811115611ee357600080fd5b611eef8882870161173f565b91830191909152509594505050505056fea2646970667358221220855ef650790f2af4beb2d544c28e64f5e7d0dfda6e0e69fe499b826d4d447b6b64736f6c63430008120033";

type ConfigFacetConstructorParams =
  | [linkLibraryAddresses: ConfigFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ConfigFacet__factory extends ContractFactory {
  constructor(...args: ConfigFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ConfigFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ConfigFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c06d506426af55c412c71c91137196f65b\\$__", "g"),
      linkLibraryAddresses["contracts/process/ConfigProcess.sol:ConfigProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfigFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfigFacet__factory {
    return super.connect(runner) as ConfigFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigFacetInterface {
    return new Interface(_abi) as ConfigFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ConfigFacet {
    return new Contract(address, _abi, runner) as unknown as ConfigFacet;
  }
}

export interface ConfigFacetLibraryAddresses {
  ["contracts/process/ConfigProcess.sol:ConfigProcess"]: string;
}
