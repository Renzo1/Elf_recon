/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeeFacet,
  FeeFacetInterface,
} from "../../../contracts/facets/FeeFacet";

const _abi = [
  {
    inputs: [],
    name: "ClaimRewardsRequestNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleAccess",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "reasonCode",
        type: "bytes32",
      },
    ],
    name: "cancelClaimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimUsdToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
    ],
    name: "createClaimRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "distributeFeeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "executeClaimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountFeeRewards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "stakeTokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "rewards",
            type: "uint256[]",
          },
        ],
        internalType: "struct IFee.AccountFeeRewards",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountUsdFeeReward",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IFee.AccountUsdFeeReward",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "getAccountsFeeRewards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "stakeTokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "rewards",
            type: "uint256[]",
          },
        ],
        internalType: "struct IFee.AccountFeeRewards[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
    ],
    name: "getCumulativeRewardsPerStakeToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getDaoTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "symbol",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getMarketTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPoolTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getStakingTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bc4806100206000396000f3fe6080604052600436106100c75760003560e01c8063943144b711610074578063bc8f47c51161004e578063bc8f47c51461021b578063e9e6741f1461023b578063ed3bb1471461025b57600080fd5b8063943144b7146101bb578063ada56365146101ce578063b9ee8073146101fb57600080fd5b80635c99abaa116100a55780635c99abaa1461014c5780637ad18303146101795780639084692c1461019957600080fd5b806351ebcaad146100cc57806355be18cb146100ff5780635b9e52be1461011f575b600080fd5b3480156100d857600080fd5b506100ec6100e736600461134f565b61027b565b6040519081526020015b60405180910390f35b34801561010b57600080fd5b506100ec61011a36600461134f565b610332565b34801561012b57600080fd5b5061013f61013a366004611388565b6103a3565b6040516100f691906114ea565b34801561015857600080fd5b5061016c61016736600461156a565b610568565b6040516100f6919061158e565b34801561018557600080fd5b506100ec61019436600461156a565b610623565b3480156101a557600080fd5b506101b96101b43660046115ca565b6106c8565b005b6101b96101c9366004611649565b610aa4565b3480156101da57600080fd5b506101ee6101e936600461156a565b610b46565b6040516100f69190611675565b34801561020757600080fd5b506100ec61021636600461134f565b610c4b565b34801561022757600080fd5b506100ec610236366004611688565b610cbc565b34801561024757600080fd5b506101b96102563660046115ca565b610d2c565b34801561026757600080fd5b506101b96102763660046116ad565b610f37565b6040517f652a5cd400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80841660048301528216602482015260009073__$eaa0fd6d176dd52c80a742532ca70916cb$__9063652a5cd4906044015b602060405180830381865af4158015610305573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032991906116cf565b90505b92915050565b6040517f55be18cb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80841660048301528216602482015260009073__$eaa0fd6d176dd52c80a742532ca70916cb$__906355be18cb906044016102e8565b606060008267ffffffffffffffff8111156103c0576103c06116e8565b60405190808252806020026020018201604052801561043257816020015b61041f6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b8152602001906001900390816103de5790505b50905060005b838110156105605773__$eaa0fd6d176dd52c80a742532ca70916cb$__63ada5636586868481811061046c5761046c611717565b9050602002016020810190610481919061156a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381865af41580156104ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610530919081019061184b565b82828151811061054257610542611717565b6020026020010181905250808061055890611969565b915050610438565b509392505050565b604080516060810182526000808252602082018190528183015290517f5c99abaa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015273__$eaa0fd6d176dd52c80a742532ca70916cb$__90635c99abaa90602401606060405180830381865af41580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190611a36565b6040517f7ad1830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260009073__$eaa0fd6d176dd52c80a742532ca70916cb$__90637ad1830390602401602060405180830381865af41580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906116cf565b60005a90506106f67f4b45455045520000000000000000000000000000000000000000000000000000611205565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810185905260009073__$095819442e458250d76ad84988a16a5b96$__90639507d39a90602401606060405180830381865af4158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611a36565b805190915073ffffffffffffffffffffffffffffffffffffffff166107d7576040517f0e93c5aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f7532d8bc00000000000000000000000000000000000000000000000000000000815273__$76a505dbd6210c6de5172a9e6577e0d579$__90637532d8bc906108299087908790600401611a52565b60006040518083038186803b15801561084157600080fd5b505af4158015610855573d6000803e3d6000fd5b50506040517f3802c05300000000000000000000000000000000000000000000000000000000815273__$715b722fdebdeacbda8f3f3d9490405573$__9250633802c05391506108ab9088908590600401611ad9565b60006040518083038186803b1580156108c357600080fd5b505af41580156108d7573d6000803e3d6000fd5b5050505073__$76a505dbd6210c6de5172a9e6577e0d579$__63e52ed3656040518163ffffffff1660e01b815260040160006040518083038186803b15801561091f57600080fd5b505af4158015610933573d6000803e3d6000fd5b5050505073__$1af6d17e273104ca3ca5016ca475f591a0$__634d4d56726040518060a001604052803073ffffffffffffffffffffffffffffffffffffffff16631f7592ea6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190611b1e565b73ffffffffffffffffffffffffffffffffffffffff9081168252604080870151602080850191909152818401899052336060808601919091528851841660809586015282517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681528651851660048201529186015160248301529185015160448201529084015182166064820152929091015116608482015260a40160006040518083038186803b158015610a8557600080fd5b505af4158015610a99573d6000803e3d6000fd5b505050505050505050565b6040517f69479be900000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905273__$715b722fdebdeacbda8f3f3d9490405573$__906369479be99060640160006040518083038186803b158015610b2a57600080fd5b505af4158015610b3e573d6000803e3d6000fd5b505050505050565b610b876040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b6040517fada5636500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015273__$eaa0fd6d176dd52c80a742532ca70916cb$__9063ada5636590602401600060405180830381865af4158015610c05573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261032c919081019061184b565b6040517fb9ee807300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80841660048301528216602482015260009073__$eaa0fd6d176dd52c80a742532ca70916cb$__9063b9ee8073906044016102e8565b6040517f840ad0f10000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff8216602482015260009073__$eaa0fd6d176dd52c80a742532ca70916cb$__9063840ad0f1906044016102e8565b60005a9050610d5a7f4b45455045520000000000000000000000000000000000000000000000000000611205565b6040517f7532d8bc00000000000000000000000000000000000000000000000000000000815273__$76a505dbd6210c6de5172a9e6577e0d579$__90637532d8bc90610dac9086908690600401611a52565b60006040518083038186803b158015610dc457600080fd5b505af4158015610dd8573d6000803e3d6000fd5b50506040517f971b55b10000000000000000000000000000000000000000000000000000000081526004810187905273__$277b694ed2611d6e10f27fb08fc050fd84$__925063971b55b1915060240160006040518083038186803b158015610e4057600080fd5b505af4158015610e54573d6000803e3d6000fd5b5050505073__$76a505dbd6210c6de5172a9e6577e0d579$__63e52ed3656040518163ffffffff1660e01b815260040160006040518083038186803b158015610e9c57600080fd5b505af4158015610eb0573d6000803e3d6000fd5b50506040517f1f10eda40000000000000000000000000000000000000000000000000000000081526004810184905273__$1af6d17e273104ca3ca5016ca475f591a0$__9250631f10eda491506024015b60006040518083038186803b158015610f1957600080fd5b505af4158015610f2d573d6000803e3d6000fd5b5050505050505050565b60005a9050610f657f4b45455045520000000000000000000000000000000000000000000000000000611205565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810184905260009073__$095819442e458250d76ad84988a16a5b96$__90639507d39a90602401606060405180830381865af4158015610fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff59190611a36565b805190915073ffffffffffffffffffffffffffffffffffffffff16611046576040517f0e93c5aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa473e5a400000000000000000000000000000000000000000000000000000000815273__$715b722fdebdeacbda8f3f3d9490405573$__9063a473e5a49061109a90879085908890600401611b3b565b60006040518083038186803b1580156110b257600080fd5b505af41580156110c6573d6000803e3d6000fd5b5050505073__$1af6d17e273104ca3ca5016ca475f591a0$__634d4d56726040518060a001604052803073ffffffffffffffffffffffffffffffffffffffff16631f7592ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e9190611b1e565b73ffffffffffffffffffffffffffffffffffffffff9081168252604080870151602080850191909152818401899052336060808601919091528851841660809586015282517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681528651851660048201529186015160248301529185015160448201529084015182166064820152929091015116608482015260a401610f01565b61120f3382611255565b611252576040517fb5f438340000000000000000000000000000000000000000000000000000000081523360048201526024810182905260440160405180910390fd5b50565b6000806112606112ad565b73ffffffffffffffffffffffffffffffffffffffff851660009081526020829052604090209091506112a5908460008181526001830160205260408120541515610329565b949350505050565b6000806040516020016112f1906020808252601e908201527f78797a2e656c66692e73746f726167652e416363657373436f6e74726f6c0000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461125257600080fd5b6000806040838503121561136257600080fd5b823561136d8161132d565b9150602083013561137d8161132d565b809150509250929050565b6000806020838503121561139b57600080fd5b823567ffffffffffffffff808211156113b357600080fd5b818501915085601f8301126113c757600080fd5b8135818111156113d657600080fd5b8660208260051b85010111156113eb57600080fd5b60209290920196919550909350505050565b600081518084526020808501945080840160005b8381101561144357815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611411565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff8151168252600060208083015160808286015261148360808601826113fd565b90506040840151858203604087015261149c82826113fd565b606086810151888303918901919091528051808352908501935060009250908401905b808310156114df57835182529284019260019290920191908401906114bf565b509695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561155d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261154b85835161144e565b94509285019290850190600101611511565b5092979650505050505050565b60006020828403121561157c57600080fd5b81356115878161132d565b9392505050565b815173ffffffffffffffffffffffffffffffffffffffff908116825260208084015190911690820152604080830151908201526060810161032c565b6000806000604084860312156115df57600080fd5b83359250602084013567ffffffffffffffff808211156115fe57600080fd5b818601915086601f83011261161257600080fd5b81358181111561162157600080fd5b8760208260071b850101111561163657600080fd5b6020830194508093505050509250925092565b6000806040838503121561165c57600080fd5b82356116678161132d565b946020939093013593505050565b602081526000610329602083018461144e565b6000806040838503121561169b57600080fd5b82359150602083013561137d8161132d565b600080604083850312156116c057600080fd5b50508035926020909101359150565b6000602082840312156116e157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040516080810167ffffffffffffffff81118282101715611769576117696116e8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117b6576117b66116e8565b604052919050565b600067ffffffffffffffff8211156117d8576117d86116e8565b5060051b60200190565b600082601f8301126117f357600080fd5b81516020611808611803836117be565b61176f565b82815260059290921b8401810191818101908684111561182757600080fd5b8286015b848110156114df57805161183e8161132d565b835291830191830161182b565b6000602080838503121561185e57600080fd5b825167ffffffffffffffff8082111561187657600080fd5b908401906080828703121561188a57600080fd5b611892611746565b825161189d8161132d565b815282840151828111156118b057600080fd5b6118bc888286016117e2565b85830152506040830151828111156118d357600080fd5b6118df888286016117e2565b6040830152506060830151828111156118f757600080fd5b80840193505086601f84011261190c57600080fd5b8251915061191c611803836117be565b82815260059290921b8301840191848101908884111561193b57600080fd5b938501935b8385101561195957845182529385019390850190611940565b6060830152509695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000606082840312156119da57600080fd5b6040516060810181811067ffffffffffffffff821117156119fd576119fd6116e8565b80604052508091508251611a108161132d565b81526020830151611a208161132d565b6020820152604092830151920191909152919050565b600060608284031215611a4857600080fd5b61032983836119c8565b6020808252818101839052600090604080840186845b87811015611acc578135611a7b8161132d565b73ffffffffffffffffffffffffffffffffffffffff90811684528286013590611aa38261132d565b168386015281840135848401526060808301359084015260809283019290910190600101611a68565b5090979650505050505050565b82815260808101611587602083018473ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015250604081015160408301525050565b600060208284031215611b3057600080fd5b81516115878161132d565b83815260a08101611b80602083018573ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015250604081015160408301525050565b82608083015294935050505056fea2646970667358221220ac397c100caaf86085ee6e24afa21defca42ebddd374ffdc8e952f22b2b8b4a564736f6c63430008120033";

type FeeFacetConstructorParams =
  | [linkLibraryAddresses: FeeFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FeeFacet__factory extends ContractFactory {
  constructor(...args: FeeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, FeeFacet__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: FeeFacetLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eaa0fd6d176dd52c80a742532ca70916cb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/process/FeeQueryProcess.sol:FeeQueryProcess"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$095819442e458250d76ad84988a16a5b96\\$__", "g"),
      linkLibraryAddresses["contracts/storage/ClaimRewards.sol:ClaimRewards"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$76a505dbd6210c6de5172a9e6577e0d579\\$__", "g"),
      linkLibraryAddresses["contracts/process/OracleProcess.sol:OracleProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$715b722fdebdeacbda8f3f3d9490405573\\$__", "g"),
      linkLibraryAddresses[
        "contracts/process/ClaimRewardsProcess.sol:ClaimRewardsProcess"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1af6d17e273104ca3ca5016ca475f591a0\\$__", "g"),
      linkLibraryAddresses["contracts/process/GasProcess.sol:GasProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$277b694ed2611d6e10f27fb08fc050fd84\\$__", "g"),
      linkLibraryAddresses[
        "contracts/process/FeeRewardsProcess.sol:FeeRewardsProcess"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeFacet__factory {
    return super.connect(runner) as FeeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeFacetInterface {
    return new Interface(_abi) as FeeFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeFacet {
    return new Contract(address, _abi, runner) as unknown as FeeFacet;
  }
}

export interface FeeFacetLibraryAddresses {
  ["contracts/process/FeeQueryProcess.sol:FeeQueryProcess"]: string;
  ["contracts/storage/ClaimRewards.sol:ClaimRewards"]: string;
  ["contracts/process/OracleProcess.sol:OracleProcess"]: string;
  ["contracts/process/ClaimRewardsProcess.sol:ClaimRewardsProcess"]: string;
  ["contracts/process/GasProcess.sol:GasProcess"]: string;
  ["contracts/process/FeeRewardsProcess.sol:FeeRewardsProcess"]: string;
}
