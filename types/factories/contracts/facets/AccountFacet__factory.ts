/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AccountFacet,
  AccountFacetInterface,
} from "../../../contracts/facets/AccountFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount2",
        type: "uint256",
      },
    ],
    name: "AmountNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountZeroNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCollateralSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawRequestNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "int256[]",
            name: "changedTokenAmounts",
            type: "int256[]",
          },
        ],
        internalType: "struct AssetsProcess.UpdateAccountTokenParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "batchUpdateAccountToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "reasonCode",
        type: "bytes32",
      },
    ],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createWithdrawRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "executeWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "interest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
            ],
            internalType: "struct Account.TokenBalance[]",
            name: "tokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "bytes32[]",
            name: "positions",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "portfolioNetValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalUsedValue",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "availableValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "orderHoldInUsd",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "crossMMR",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "crossNetValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "totalMM",
            type: "uint256",
          },
        ],
        internalType: "struct IAccount.AccountInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "getAccountInfoWithOracles",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "interest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
            ],
            internalType: "struct Account.TokenBalance[]",
            name: "tokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "bytes32[]",
            name: "positions",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "portfolioNetValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalUsedValue",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "availableValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "orderHoldInUsd",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "crossMMR",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "crossNetValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "totalMM",
            type: "uint256",
          },
        ],
        internalType: "struct IAccount.AccountInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612416806100206000396000f3fe6080604052600436106100745760003560e01c806347e7ef241161004e57806347e7ef24146100e2578063750b5a19146100f55780637b510fe814610115578063abac56651461014b57600080fd5b806302e9d19914610080578063115647f7146100a257806313874d37146100c257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004611922565b61016b565b005b3480156100ae57600080fd5b506100a06100bd36600461196e565b6103db565b3480156100ce57600080fd5b506100a06100dd3660046119a9565b610501565b6100a06100f03660046119ed565b610694565b34801561010157600080fd5b506100a06101103660046119ed565b610942565b34801561012157600080fd5b50610135610130366004611a19565b610aa9565b6040516101429190611b07565b60405180910390f35b34801561015757600080fd5b50610135610166366004611c07565b611017565b6101947f4b454550455200000000000000000000000000000000000000000000000000006117ad565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810184905260009073__$1f82edfaba53aca26a2c90be36f4e4230e$__90639507d39a90602401606060405180830381865af4158015610200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102249190611cfb565b805190915073ffffffffffffffffffffffffffffffffffffffff16610275576040517f24d9d15b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f7532d8bc00000000000000000000000000000000000000000000000000000000815273__$76a505dbd6210c6de5172a9e6577e0d579$__90637532d8bc906102c79086908690600401611ddc565b60006040518083038186803b1580156102df57600080fd5b505af41580156102f3573d6000803e3d6000fd5b50506040517fb1f6b6f400000000000000000000000000000000000000000000000000000000815273__$ae0937d060466c56d4bdd1eafaed47a473$__925063b1f6b6f491506103499087908590600401611df0565b60006040518083038186803b15801561036157600080fd5b505af4158015610375573d6000803e3d6000fd5b5050505073__$76a505dbd6210c6de5172a9e6577e0d579$__63e52ed3656040518163ffffffff1660e01b815260040160006040518083038186803b1580156103bd57600080fd5b505af41580156103d1573d6000803e3d6000fd5b5050505050505050565b73__$2b00c9d0cdf78dd5187c9c951fc5cff71b$__637ff877006104026020840184611a19565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160006040518083038186803b15801561046657600080fd5b505af415801561047a573d6000803e3d6000fd5b50506040517feec5b28700000000000000000000000000000000000000000000000000000000815273__$ae0937d060466c56d4bdd1eafaed47a473$__925063eec5b28791506104ce908490600401611e9c565b60006040518083038186803b1580156104e657600080fd5b505af41580156104fa573d6000803e3d6000fd5b5050505050565b61052a7f4b454550455200000000000000000000000000000000000000000000000000006117ad565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810183905260009073__$1f82edfaba53aca26a2c90be36f4e4230e$__90639507d39a90602401606060405180830381865af4158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611cfb565b805190915073ffffffffffffffffffffffffffffffffffffffff1661060b576040517f24d9d15b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f05ac818800000000000000000000000000000000000000000000000000000000815273__$ae0937d060466c56d4bdd1eafaed47a473$__906305ac81889061065f90869085908790600401611f86565b60006040518083038186803b15801561067757600080fd5b505af415801561068b573d6000803e3d6000fd5b50505050505050565b806000036106ce576040517f169f86e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216158080156106f35750813414155b15610738576040517f1994a83a000000000000000000000000000000000000000000000000000000008152346004820152602481018390526044015b60405180910390fd5b801580156107e757506040517fe981fddd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015273__$09a3fa90069f9d570d0ba0decbda5b35e6$__9063e981fddd9060240161012060405180830381865af41580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e49190611fe9565b51155b1561081e576040517f433f896a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600033905073__$ae0937d060466c56d4bdd1eafaed47a473$__63996dd59e6040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018561086f57876108df565b73__$403afd1716c71ad05f9fd75974b23df554$__63606c0c946040518163ffffffff1660e01b815260040161012060405180830381865af41580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd919061206b565b515b73ffffffffffffffffffffffffffffffffffffffff16815260208101879052604001600081526020018515158152506040518263ffffffff1660e01b815260040161092a919061208f565b60006040518083038186803b1580156103bd57600080fd5b6040517f7ff8770000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015273__$2b00c9d0cdf78dd5187c9c951fc5cff71b$__90637ff877009060240160006040518083038186803b1580156109bb57600080fd5b505af41580156109cf573d6000803e3d6000fd5b5050505080600003610a0d576040517f169f86e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f750b5a1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024810182905273__$ae0937d060466c56d4bdd1eafaed47a473$__9063750b5a199060440160006040518083038186803b158015610a8d57600080fd5b505af4158015610aa1573d6000803e3d6000fd5b505050505050565b610b1c604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517f2f40e73400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260009073__$a224e41da3178beb3af7fdcdf4ade93682$__90632f40e73490602401602060405180830381865af4158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc1919061211e565b9050610c36604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517f7f80ceb10000000000000000000000000000000000000000000000000000000081526004810183905273__$a224e41da3178beb3af7fdcdf4ade93682$__90637f80ceb190602401602060405180830381865af4158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc39190612137565b610cce579392505050565b6040517fb2485df30000000000000000000000000000000000000000000000000000000081526004810183905260009073__$a224e41da3178beb3af7fdcdf4ade93682$__9063b2485df390602401600060405180830381865af4158015610d3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d809190810190612176565b90506000815167ffffffffffffffff811115610d9e57610d9e611c43565b604051908082528060200260200182016040528015610dfa57816020015b610de76040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200190600190039081610dbc5790505b50905060005b8251811015610eed578473__$a224e41da3178beb3af7fdcdf4ade93682$__63a68524569091858481518110610e3857610e38612215565b60200260200101516040518363ffffffff1660e01b8152600401610e7c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b608060405180830381865af4158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd9190612244565b828281518110610ecf57610ecf612215565b60200260200101819052508080610ee5906122aa565b915050610e00565b506040517f35cd11510000000000000000000000000000000000000000000000000000000081526004810185905260009073__$a224e41da3178beb3af7fdcdf4ade93682$__906335cd115190602401600060405180830381865af4158015610f5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fa09190810190612309565b604080516101608101825273ffffffffffffffffffffffffffffffffffffffff90991689526020890193909352918701929092526060860152505060006080840181905260a0840181905260c0840181905260019091015460e0840152610100830181905261012083018190526101408301525090565b61108a604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517f2f40e73400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260009073__$a224e41da3178beb3af7fdcdf4ade93682$__90632f40e73490602401602060405180830381865af415801561110b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112f919061211e565b90506111a4604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517f7f80ceb10000000000000000000000000000000000000000000000000000000081526004810183905273__$a224e41da3178beb3af7fdcdf4ade93682$__90637f80ceb190602401602060405180830381865af415801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112319190612137565b61123e5791506117a69050565b6040517fb2485df30000000000000000000000000000000000000000000000000000000081526004810183905260009073__$a224e41da3178beb3af7fdcdf4ade93682$__9063b2485df390602401600060405180830381865af41580156112aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112f09190810190612176565b90506000815167ffffffffffffffff81111561130e5761130e611c43565b60405190808252806020026020018201604052801561136a57816020015b6113576040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020019060019003908161132c5790505b50905060005b825181101561145d578473__$a224e41da3178beb3af7fdcdf4ade93682$__63a685245690918584815181106113a8576113a8612215565b60200260200101516040518363ffffffff1660e01b81526004016113ec92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b608060405180830381865af4158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142d9190612244565b82828151811061143f5761143f612215565b60200260200101819052508080611455906122aa565b915050611370565b506040517fc0a12cd70000000000000000000000000000000000000000000000000000000081526000908190819073__$9a5c99e2d87ca73b3b96a7a2a94d399197$__9063c0a12cd7906114b9908a908e908e9060040161238f565b606060405180830381865af41580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa91906123b2565b6040517ff29170bc000000000000000000000000000000000000000000000000000000008152929550909350915060009073__$9a5c99e2d87ca73b3b96a7a2a94d399197$__9063f29170bc90611559908b908f908f9060040161238f565b602060405180830381865af4158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a919061211e565b90506040518061016001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018781526020018973__$a224e41da3178beb3af7fdcdf4ade93682$__6335cd115190916040518263ffffffff1660e01b815260040161160b91815260200190565b600060405180830381865af4158015611628573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261166e9190810190612309565b81526020018973__$9a5c99e2d87ca73b3b96a7a2a94d399197$__639ab05b4a90918f8f6040518463ffffffff1660e01b81526004016116b09392919061238f565b602060405180830381865af41580156116cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f1919061211e565b81526020018973__$9a5c99e2d87ca73b3b96a7a2a94d399197$__633538b71090918f8f6040518463ffffffff1660e01b81526004016117339392919061238f565b602060405180830381865af4158015611750573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611774919061211e565b8152602081019290925260019098015460408201526060810193909352608083019190915260a0909101525091925050505b9392505050565b6117b733826117f9565b6117f6576040517fb5f438340000000000000000000000000000000000000000000000000000000081523360048201526024810182905260440161072f565b50565b60008061180461183e565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260208290526040902090915061183690846118be565b949350505050565b600080604051602001611882906020808252601e908201527f78797a2e656c66692e73746f726167652e416363657373436f6e74726f6c0000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b600081815260018301602052604081205415156117a6565b60008083601f8401126118e857600080fd5b50813567ffffffffffffffff81111561190057600080fd5b6020830191508360208260071b850101111561191b57600080fd5b9250929050565b60008060006040848603121561193757600080fd5b83359250602084013567ffffffffffffffff81111561195557600080fd5b611961868287016118d6565b9497909650939450505050565b60006020828403121561198057600080fd5b813567ffffffffffffffff81111561199757600080fd5b8201606081850312156117a657600080fd5b600080604083850312156119bc57600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff811681146117f657600080fd5b60008060408385031215611a0057600080fd5b8235611a0b816119cb565b946020939093013593505050565b600060208284031215611a2b57600080fd5b81356117a6816119cb565b600081518084526020808501945080840160005b83811015611a86578151805188528381015184890152604080820151908901526060908101519088015260809096019590820190600101611a4a565b509495945050505050565b600081518084526020808501945080840160005b83811015611a8657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611aa5565b600081518084526020808501945080840160005b83811015611a8657815187529582019590820190600101611aeb565b60208152611b2e60208201835173ffffffffffffffffffffffffffffffffffffffff169052565b60006020830151610160806040850152611b4c610180850183611a36565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080868503016060870152611b888483611a91565b9350606087015191508086850301608087015250611ba68382611ad7565b925050608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b600080600060408486031215611c1c57600080fd5b8335611c27816119cb565b9250602084013567ffffffffffffffff81111561195557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611c9657611c96611c43565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ce357611ce3611c43565b604052919050565b8051611cf6816119cb565b919050565b600060608284031215611d0d57600080fd5b6040516060810181811067ffffffffffffffff82111715611d3057611d30611c43565b6040528251611d3e816119cb565b81526020830151611d4e816119cb565b60208201526040928301519281019290925250919050565b8183526000602080850194508260005b85811015611a86578135611d89816119cb565b73ffffffffffffffffffffffffffffffffffffffff90811688528284013590611db1826119cb565b1687840152604082810135908801526060808301359088015260809687019690910190600101611d76565b602081526000611836602083018486611d66565b828152608081016117a6602083018473ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015250604081015160408301525050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611e6a57600080fd5b830160208101925035905067ffffffffffffffff811115611e8a57600080fd5b8060051b360382131561191b57600080fd5b60006020808352608083018435611eb2816119cb565b73ffffffffffffffffffffffffffffffffffffffff80821684870152611eda84880188611e35565b6060604089015293849052929150600060a087015b83821015611f18578435611f02816119cb565b8316815293850193600191909101908501611eef565b611f2560408a018a611e35565b8983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160608b01528083529550935085019150600090505b83811015611f7b57823582529184019190840190600101611f5f565b509695505050505050565b83815260a08101611fcb602083018573ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015250604081015160408301525050565b826080830152949350505050565b80518015158114611cf657600080fd5b60006101208284031215611ffc57600080fd5b612004611c72565b61200d83611fd9565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b6000610120828403121561207e57600080fd5b612086611c72565b61200d83611ceb565b600060a08201905073ffffffffffffffffffffffffffffffffffffffff8084511683528060208501511660208401525060408301516040830152606083015160048110612105577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8060608401525060808301511515608083015292915050565b60006020828403121561213057600080fd5b5051919050565b60006020828403121561214957600080fd5b6117a682611fd9565b600067ffffffffffffffff82111561216c5761216c611c43565b5060051b60200190565b6000602080838503121561218957600080fd5b825167ffffffffffffffff8111156121a057600080fd5b8301601f810185136121b157600080fd5b80516121c46121bf82612152565b611c9c565b81815260059190911b820183019083810190878311156121e357600080fd5b928401925b8284101561220a5783516121fb816119cb565b825292840192908401906121e8565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006080828403121561225657600080fd5b6040516080810181811067ffffffffffffffff8211171561227957612279611c43565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612302577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602080838503121561231c57600080fd5b825167ffffffffffffffff81111561233357600080fd5b8301601f8101851361234457600080fd5b80516123526121bf82612152565b81815260059190911b8201830190838101908783111561237157600080fd5b928401925b8284101561220a57835182529284019290840190612376565b8381526040602082015260006123a9604083018486611d66565b95945050505050565b6000806000606084860312156123c757600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220a62c7ced21dbbc489266889e8fc5ed1b060c0a62f21f3ad2259d7bfffc0702ef64736f6c63430008120033";

type AccountFacetConstructorParams =
  | [linkLibraryAddresses: AccountFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AccountFacet__factory extends ContractFactory {
  constructor(...args: AccountFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccountFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AccountFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1f82edfaba53aca26a2c90be36f4e4230e\\$__", "g"),
      linkLibraryAddresses["contracts/storage/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$76a505dbd6210c6de5172a9e6577e0d579\\$__", "g"),
      linkLibraryAddresses["contracts/process/OracleProcess.sol:OracleProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ae0937d060466c56d4bdd1eafaed47a473\\$__", "g"),
      linkLibraryAddresses["contracts/process/AssetsProcess.sol:AssetsProcess"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2b00c9d0cdf78dd5187c9c951fc5cff71b\\$__", "g"),
      linkLibraryAddresses["contracts/utils/AddressUtils.sol:AddressUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$09a3fa90069f9d570d0ba0decbda5b35e6\\$__", "g"),
      linkLibraryAddresses[
        "contracts/storage/AppTradeTokenConfig.sol:AppTradeTokenConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$403afd1716c71ad05f9fd75974b23df554\\$__", "g"),
      linkLibraryAddresses["contracts/storage/AppConfig.sol:AppConfig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a224e41da3178beb3af7fdcdf4ade93682\\$__", "g"),
      linkLibraryAddresses["contracts/storage/Account.sol:Account"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9a5c99e2d87ca73b3b96a7a2a94d399197\\$__", "g"),
      linkLibraryAddresses[
        "contracts/process/AccountProcess.sol:AccountProcess"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountFacet__factory {
    return super.connect(runner) as AccountFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFacetInterface {
    return new Interface(_abi) as AccountFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountFacet {
    return new Contract(address, _abi, runner) as unknown as AccountFacet;
  }
}

export interface AccountFacetLibraryAddresses {
  ["contracts/storage/Withdraw.sol:Withdraw"]: string;
  ["contracts/process/OracleProcess.sol:OracleProcess"]: string;
  ["contracts/process/AssetsProcess.sol:AssetsProcess"]: string;
  ["contracts/utils/AddressUtils.sol:AddressUtils"]: string;
  ["contracts/storage/AppTradeTokenConfig.sol:AppTradeTokenConfig"]: string;
  ["contracts/storage/AppConfig.sol:AppConfig"]: string;
  ["contracts/storage/Account.sol:Account"]: string;
  ["contracts/process/AccountProcess.sol:AccountProcess"]: string;
}
