/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VaultFacet,
  VaultFacetInterface,
} from "../../../contracts/facets/VaultFacet";

const _abi = [
  {
    inputs: [],
    name: "getLpVault",
    outputs: [
      {
        internalType: "contract LpVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLpVaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPortfolioVault",
    outputs: [
      {
        internalType: "contract PortfolioVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPortfolioVaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradeVault",
    outputs: [
      {
        internalType: "contract TradeVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradeVaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610235806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806397e7b7f21161005057806397e7b7f2146100a8578063da57c7f814610077578063f413e81a146100b057600080fd5b806308ba026f14610077578063131d5c8a146100a85780631f7592ea146100b0575b600080fd5b61007f6100b8565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61007f61012c565b61007f610177565b600073__$6c53a7bbfdd28a722b2c2755e2b973ba23$__63da57c7f86040518163ffffffff1660e01b8152600401602060405180830381865af4158015610103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012791906101c2565b905090565b600073__$6c53a7bbfdd28a722b2c2755e2b973ba23$__63131d5c8a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015610103573d6000803e3d6000fd5b600073__$6c53a7bbfdd28a722b2c2755e2b973ba23$__63f413e81a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015610103573d6000803e3d6000fd5b6000602082840312156101d457600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146101f857600080fd5b939250505056fea2646970667358221220815d27d05e7287a4cb9f8880b5a645b3dfc179fef7f569dc45d930da0e6788d364736f6c63430008120033";

type VaultFacetConstructorParams =
  | [linkLibraryAddresses: VaultFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VaultFacet__factory extends ContractFactory {
  constructor(...args: VaultFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        VaultFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: VaultFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6c53a7bbfdd28a722b2c2755e2b973ba23\\$__", "g"),
      linkLibraryAddresses[
        "contracts/storage/AppVaultConfig.sol:AppVaultConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultFacet__factory {
    return super.connect(runner) as VaultFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFacetInterface {
    return new Interface(_abi) as VaultFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaultFacet {
    return new Contract(address, _abi, runner) as unknown as VaultFacet;
  }
}

export interface VaultFacetLibraryAddresses {
  ["contracts/storage/AppVaultConfig.sol:AppVaultConfig"]: string;
}
