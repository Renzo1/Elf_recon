/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { ArbSys, ArbSysInterface } from "../../../contracts/chain/ArbSys";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "arbBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ArbSys__factory {
  static readonly abi = _abi;
  static createInterface(): ArbSysInterface {
    return new Interface(_abi) as ArbSysInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArbSys {
    return new Contract(address, _abi, runner) as unknown as ArbSys;
  }
}
