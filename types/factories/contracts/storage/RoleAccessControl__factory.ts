/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RoleAccessControl,
  RoleAccessControlInterface,
} from "../../../contracts/storage/RoleAccessControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleAccess",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "InvalidRoleName",
    type: "error",
  },
] as const;

const _bytecode =
  "0x61010561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806386d5c4be146038575b600080fd5b603e6050565b60405190815260200160405180910390f35b6000806040516020016093906020808252601e908201527f78797a2e656c66692e73746f726167652e416363657373436f6e74726f6c0000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209291505056fea2646970667358221220d60fc631d92983fd58f792b22479a64d6b3b08aa793aa5cf2e73d702469f5b8264736f6c63430008120033";

type RoleAccessControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoleAccessControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoleAccessControl__factory extends ContractFactory {
  constructor(...args: RoleAccessControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoleAccessControl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoleAccessControl__factory {
    return super.connect(runner) as RoleAccessControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoleAccessControlInterface {
    return new Interface(_abi) as RoleAccessControlInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoleAccessControl {
    return new Contract(address, _abi, runner) as unknown as RoleAccessControl;
  }
}
