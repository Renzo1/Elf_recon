/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeeRewards,
  FeeRewardsInterface,
} from "../../../contracts/storage/FeeRewards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "stakeTokens",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "cumulativeRewardsPerStakeToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct FeeRewards.CumulativeRewardsPerStakeTokenData[]",
        name: "cumulativeRewardsPerStakeToken",
        type: "tuple[]",
      },
    ],
    name: "UpdateFeeRewardsCumulativeEvent",
    type: "event",
  },
] as const;

const _bytecode =
  "0x6111ca61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101c35760003560e01c80638f1679ca11610103578063d28d611a116100a1578063eaa46fa51161007b578063eaa46fa5146104fa578063fd7f5ae814610534578063fe8d19bf14610588578063ff73bf82146105a857600080fd5b8063d28d611a1461047a578063d4a9e84e146104a0578063d791041f146104da57600080fd5b8063a47e4f05116100dd578063a47e4f05146103ed578063bfaa6d8014610400578063c5ca765414610420578063cdac910c1461045a57600080fd5b80638f1679ca1461037557806395a991e21461039557806397c9008f146103a857600080fd5b80635bf94f2211610170578063670ec2f31161014a578063670ec2f31461030757806372fc76b41461031a578063766b26f51461032f57806386d5c4be1461034f57600080fd5b80635bf94f22146102a15780635e20db72146102c1578063604c4245146102e157600080fd5b806334e1a777116101a157806334e1a7771461024e578063378c9f6e14610261578063516dad281461028157600080fd5b806315e49ead146101c857806316245ebd146101ee578063214d112b14610210575b600080fd5b6101db6101d6366004610c73565b6105c8565b6040519081526020015b60405180910390f35b8180156101fa57600080fd5b5061020e610209366004610caf565b6105f0565b005b6101db61021e366004610cf3565b60009081527fb31b5831e77ebf4a20e050d886d24b00d24f44760e3342d08fb455df41d4aaf86020526040902090565b6101db61025c366004610cf3565b61064f565b81801561026d57600080fd5b5061020e61027c366004610d0c565b6106a4565b81801561028d57600080fd5b5061020e61029c366004610ea5565b61071f565b8180156102ad57600080fd5b5061020e6102bc366004610d0c565b61075c565b6102d46102cf366004610cf3565b6107bd565b6040516101e59190610f65565b7fb31b5831e77ebf4a20e050d886d24b00d24f44760e3342d08fb455df41d4ab016101db565b6101db610315366004610c73565b6107ce565b6101db610328366004610cf3565b6007015490565b81801561033b57600080fd5b5061020e61034a366004610d0c565b6107f6565b7fb31b5831e77ebf4a20e050d886d24b00d24f44760e3342d08fb455df41d4aaf86101db565b81801561038157600080fd5b5061020e610390366004610d0c565b610829565b6102d46103a3366004610cf3565b61088a565b8180156103b457600080fd5b5061020e6103c3366004610fbf565b73ffffffffffffffffffffffffffffffffffffffff16600090815260029091016020526040812055565b6101db6103fb366004610c73565b610898565b81801561040c57600080fd5b5061020e61041b366004610caf565b6108c0565b6101db61042e366004610fbf565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b81801561046657600080fd5b5061020e610475366004610d0c565b610925565b7fb31b5831e77ebf4a20e050d886d24b00d24f44760e3342d08fb455df41d4aafa6101db565b6101db6104ae366004610fbf565b73ffffffffffffffffffffffffffffffffffffffff166000908152600691909101602052604090205490565b8180156104e657600080fd5b5061020e6104f5366004610d0c565b610972565b6101db610508366004610fbf565b73ffffffffffffffffffffffffffffffffffffffff166000908152600391909101602052604090205490565b6101db610542366004610feb565b73ffffffffffffffffffffffffffffffffffffffff1660009081527fb31b5831e77ebf4a20e050d886d24b00d24f44760e3342d08fb455df41d4aaf96020526040902090565b81801561059457600080fd5b5061020e6105a3366004610caf565b6109c5565b8180156105b457600080fd5b5061020e6105c3366004611006565b610a24565b6000806105d58484610a7a565b60009081526003860160205260409020549150509392505050565b6105fa8483610b3e565b61060a576106088483610b70565b505b60006106168484610a7a565b6000818152600287016020526040902054909150610635908390611061565b600091825260029095016020526040902093909355505050565b6000805b600883015481101561069e5782600801818154811061067457610674611074565b90600052602060002001548261068a9190611061565b915080610696816110a3565b915050610653565b50919050565b6106ae8383610b3e565b6106be576106bc8383610b70565b505b73ffffffffffffffffffffffffffffffffffffffff821660009081526003840160205260409020546106f1908290611061565b73ffffffffffffffffffffffffffffffffffffffff9092166000908152600390930160205250604090912055565b7f5fa32404a8727511906f2f2d5c0c0d52c7c8b8816344948303168809a43af21882826040516107509291906110db565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260068401602052604090205461078f908290611181565b73ffffffffffffffffffffffffffffffffffffffff9092166000908152600690930160205250604090912055565b60606107c882610b92565b92915050565b6000806107db8484610a7a565b60009081526006860160205260409020549150509392505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003840160205260409020546106f1908290611181565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260028401602052604090205461085c908290611181565b73ffffffffffffffffffffffffffffffffffffffff9092166000908152600290930160205250604090912055565b60606107c882600401610b92565b6000806108a58484610a7a565b60009081526002860160205260409020549150509392505050565b6108cd6004850183610b3e565b6108e0576108de6004850183610b70565b505b60006108ec8484610a7a565b600081815260068701602052604090205490915061090b908390611061565b600091825260069095016020526040902093909355505050565b61092f8383610b3e565b61093f5761093d8383610b70565b505b73ffffffffffffffffffffffffffffffffffffffff8216600090815260028401602052604090205461085c908290611061565b61097f6004840183610b3e565b610992576109906004840183610b70565b505b73ffffffffffffffffffffffffffffffffffffffff8216600090815260068401602052604090205461078f908290611061565b6109cf8483610b3e565b6109df576109dd8483610b70565b505b60006109eb8484610a7a565b6000818152600387016020526040902054909150610a0a908390611061565b600091825260039095016020526040902093909355505050565b80600003610a3157505050565b60088301548111610a5e5782600801600081548110610a5257610a52611074565b60009182526020822001555b5060089091018054600181018255600091825260209091200155565b6000604051602001610abd9060208082526011908201527f4645455f414d4f554e545f505245464958000000000000000000000000000000604082015260600190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201209083015273ffffffffffffffffffffffffffffffffffffffff808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b6000610b698373ffffffffffffffffffffffffffffffffffffffff8416610b9f565b60606000610b6983610bee565b6000818152600183016020526040812054610be6575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107c8565b5060006107c8565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c3e57602002820191906000526020600020905b815481526020019060010190808311610c2a575b50505050509050919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c6e57600080fd5b919050565b600080600060608486031215610c8857600080fd5b83359250610c9860208501610c4a565b9150610ca660408501610c4a565b90509250925092565b60008060008060808587031215610cc557600080fd5b84359350610cd560208601610c4a565b9250610ce360408601610c4a565b9396929550929360600135925050565b600060208284031215610d0557600080fd5b5035919050565b600080600060608486031215610d2157600080fd5b83359250610d3160208501610c4a565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610d9357610d93610d41565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610de057610de0610d41565b604052919050565b600067ffffffffffffffff821115610e0257610e02610d41565b5060051b60200190565b600082601f830112610e1d57600080fd5b81356020610e32610e2d83610de8565b610d99565b82815260609283028501820192828201919087851115610e5157600080fd5b8387015b85811015610e985781818a031215610e6d5760008081fd5b610e75610d70565b813581528582013586820152604080830135908201528452928401928101610e55565b5090979650505050505050565b60008060408385031215610eb857600080fd5b823567ffffffffffffffff80821115610ed057600080fd5b818501915085601f830112610ee457600080fd5b81356020610ef4610e2d83610de8565b82815260059290921b84018101918181019089841115610f1357600080fd5b948201945b83861015610f3857610f2986610c4a565b82529482019490820190610f18565b96505086013592505080821115610f4e57600080fd5b50610f5b85828601610e0c565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610fb357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f81565b50909695505050505050565b60008060408385031215610fd257600080fd5b82359150610fe260208401610c4a565b90509250929050565b600060208284031215610ffd57600080fd5b610b6982610c4a565b60008060006060848603121561101b57600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107c8576107c8611032565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110d4576110d4611032565b5060010190565b6040808252835182820181905260009190606090818501906020808901865b8381101561112c57815173ffffffffffffffffffffffffffffffffffffffff16855293820193908201906001016110fa565b5050868303818801528751808452888201938201925060005b81811015611172578451805185528381015184860152870151878501529382019392850192600101611145565b50919998505050505050505050565b818103818111156107c8576107c861103256fea2646970667358221220987e0ce3819468f2b1bd049638b4fe6dd1893dbda9a1c194fe3242910718a05064736f6c63430008120033";

type FeeRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeRewards__factory extends ContractFactory {
  constructor(...args: FeeRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeeRewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeRewards__factory {
    return super.connect(runner) as FeeRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeRewardsInterface {
    return new Interface(_abi) as FeeRewardsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeRewards {
    return new Contract(address, _abi, runner) as unknown as FeeRewards;
  }
}
