/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConfigProcess,
  ConfigProcessInterface,
} from "../../../contracts/process/ConfigProcess";

const _abi = [
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "wrapperToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "mintGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeIncreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "placeDecreaseOrderGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateMarginGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionUpdateLeverageGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawGasFeeLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "claimRewardsGasFeeLimit",
                type: "uint256",
              },
            ],
            internalType: "struct AppConfig.ChainConfig",
            name: "chainConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "tradeTokens",
                type: "address[]",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isSupportCollateral",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "precision",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "discount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityUserCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityTotalCap",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "interestRateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct AppTradeTokenConfig.TradeTokenConfig[]",
                name: "tradeTokenConfigs",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "minOrderMarginUSD",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "availableCollateralRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "crossLtvLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxMaintenanceMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFundingBaseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tradingFeeUsdPoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceProfitFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "autoReduceLiquidityFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "swapSlipperTokenFactor",
                type: "uint256",
              },
            ],
            internalType: "struct AppTradeConfig.TradeConfig",
            name: "tradeConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "collateralProtectFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrecisionMultiple",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeeStakingRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "redeemFeePoolRewardsRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "poolRewardsIntervalLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minApr",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxApr",
                type: "uint256",
              },
            ],
            internalType: "struct AppPoolConfig.StakeConfig",
            name: "stakeConfig",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "uniswapRouter",
            type: "address",
          },
        ],
        internalType: "struct IConfig.CommonConfigParams",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
    ],
    name: "getPoolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "redeemFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolPnlRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledBaseTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledStableTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolStableTokenRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolStableTokenLossLimit",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "assetTokens",
            type: "address[]",
          },
        ],
        internalType: "struct AppPoolConfig.LpPoolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "getSymbolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tickSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "openFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closeFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxLongOpenInterestCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxShortOpenInterestCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longShortRatioLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longShortOiBottomLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AppConfig.SymbolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdPoolConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "poolLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "redeemFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsettledRatioLimit",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "supportStableTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "stableTokensBorrowingInterestRate",
            type: "uint256[]",
          },
        ],
        internalType: "struct AppPoolConfig.UsdPoolConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61260a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100c85760003560e01c8063b4d93e3211610080578063c3f909d411610065578063c3f909d4146101ad578063e1be37bd146101c2578063f29486a11461023657600080fd5b8063b4d93e321461016d578063bea9849e1461018d57600080fd5b80635a19ab07116100b15780635a19ab071461010d5780638e34bdc11461012d578063a9f3f0911461014d57600080fd5b806347da0aa7146100cd5780634f42ce05146100ef575b600080fd5b8180156100d957600080fd5b506100ed6100e836600461144e565b610256565b005b6100f76102de565b60405161010491906115ae565b60405180910390f35b81801561011957600080fd5b506100ed610128366004611651565b6103ab565b81801561013957600080fd5b506100ed61014836600461166a565b61044f565b81801561015957600080fd5b506100ed6101683660046116ad565b6106ab565b81801561017957600080fd5b506100ed6101883660046116bf565b6106f3565b81801561019957600080fd5b506100ed6101a83660046116fa565b610859565b6101b56108bf565b604051610104919061186d565b6101d56101d03660046119a0565b610ad5565b6040516101049190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6102496102443660046116fa565b610bb1565b6040516101049190611a36565b805160208201516040517f90c1ed0c00000000000000000000000000000000000000000000000000000000815273__$601b397ac9b288e68d027c499a437c7805$__926390c1ed0c926102ab92600401611a49565b60006040518083038186803b1580156102c357600080fd5b505af41580156102d7573d6000803e3d6000fd5b5050505050565b6103176040518060c001604052806000815260200160008152602001600081526020016000815260200160608152602001606081525090565b73__$601b397ac9b288e68d027c499a437c7805$__634f42ce056040518163ffffffff1660e01b8152600401600060405180830381865af4158015610360573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103a69190810190611b4f565b905090565b604080517f6690212a0000000000000000000000000000000000000000000000000000000081528235600482015260208301356024820152908201356044820152606082013560648201526080820135608482015260a082013560a482015260c082013560c482015260e082013560e482015261010082013561010482015273__$403afd1716c71ad05f9fd75974b23df554$__90636690212a90610124016102ab565b6040517f341f3af900000000000000000000000000000000000000000000000000000000815273__$403afd1716c71ad05f9fd75974b23df554$__9063341f3af99061049f908490600401611c08565b60006040518083038186803b1580156104b757600080fd5b505af41580156104cb573d6000803e3d6000fd5b5050505073__$4b57634e6fa94ef3e6c6a2ca1726543a5d$__633bb4412b828061012001906104fa9190611c8a565b6040518263ffffffff1660e01b81526004016105169190611e80565b60006040518083038186803b15801561052e57600080fd5b505af4158015610542573d6000803e3d6000fd5b50506040517f357c48960000000000000000000000000000000000000000000000000000000081526101408401356004820152610160840135602482015261018084013560448201526101a084013560648201526101c084013560848201526101e084013560a482015261020084013560c482015261022084013560e482015261024084013561010482015261026084013561012482015273__$601b397ac9b288e68d027c499a437c7805$__925063357c489691506101440160006040518083038186803b15801561061457600080fd5b505af4158015610628573d6000803e3d6000fd5b5050505073__$403afd1716c71ad05f9fd75974b23df554$__63bea9849e8261028001602081019061065a91906116fa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016102ab565b6106c06106bb60208301836116fa565b610ccb565b6106d86106d360408301602084016116fa565b610eb5565b6106f06106eb60608301604084016116fa565b610fdb565b50565b73__$601b397ac9b288e68d027c499a437c7805$__63ff8087516107178380611f9c565b6040518263ffffffff1660e01b81526004016107339190611fd0565b60006040518083038186803b15801561074b57600080fd5b505af415801561075f573d6000803e3d6000fd5b50505050600073__$69c89f533e100333dfc56147eb38ab86ce$__6386d5c4be6040518163ffffffff1660e01b8152600401602060405180830381865af41580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d291906120a0565b905073__$69c89f533e100333dfc56147eb38ab86ce$__63c9dbcb32826107f98580611f9c565b6108079060808101906120b9565b6040518463ffffffff1660e01b815260040161082593929190612121565b60006040518083038186803b15801561083d57600080fd5b505af4158015610851573d6000803e3d6000fd5b505050505050565b6040517fbea9849e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015273__$403afd1716c71ad05f9fd75974b23df554$__9063bea9849e906024016102ab565b6108c7611101565b73__$403afd1716c71ad05f9fd75974b23df554$__63606c0c946040518163ffffffff1660e01b815260040161012060405180830381865af4158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190612144565b816000018190525073__$4b57634e6fa94ef3e6c6a2ca1726543a5d$__63b45849886040518163ffffffff1660e01b8152600401600060405180830381865af4158015610986573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109cc91908101906122aa565b816020018190525073__$601b397ac9b288e68d027c499a437c7805$__63fe1d4ffc6040518163ffffffff1660e01b815260040161014060405180830381865af4158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4291906123d2565b816040018190525073__$403afd1716c71ad05f9fd75974b23df554$__63524900b56040518163ffffffff1660e01b8152600401602060405180830381865af4158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190612459565b73ffffffffffffffffffffffffffffffffffffffff16606082015290565b610b1d60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040517fe1be37bd0000000000000000000000000000000000000000000000000000000081526004810183905273__$403afd1716c71ad05f9fd75974b23df554$__9063e1be37bd9060240161010060405180830381865af4158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190612476565b92915050565b610c07604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040517f3daea25d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015273__$601b397ac9b288e68d027c499a437c7805$__90633daea25d90602401600060405180830381865af4158015610c85573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bab9190810190612506565b600073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__6386d5c4be6040518163ffffffff1660e01b8152600401602060405180830381865af4158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a91906120a0565b90508073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__632aa337489091604051602001610d9a906020808252600c908201527f5641554c545f434f4e4649470000000000000000000000000000000000000000604082015260600190565b60405160208183030381529060405280519060200120604051602001610df19060208082526008908201527f4c505f5641554c54000000000000000000000000000000000000000000000000604082015260600190565b60405160208183030381529060405280519060200120604051602001610e21929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020909101207fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1682526004820192909252602481019190915273ffffffffffffffffffffffffffffffffffffffff85166044820152606401610825565b600073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__6386d5c4be6040518163ffffffff1660e01b8152600401602060405180830381865af4158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2491906120a0565b90508073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__632aa337489091604051602001610f84906020808252600c908201527f5641554c545f434f4e4649470000000000000000000000000000000000000000604082015260600190565b60405160208183030381529060405280519060200120604051602001610df1906020808252600b908201527f54524144455f5641554c54000000000000000000000000000000000000000000604082015260600190565b600073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__6386d5c4be6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104a91906120a0565b90508073__$1b86ea9efa04d6f44bb6dbbf79511d7094$__632aa3374890916040516020016110aa906020808252600c908201527f5641554c545f434f4e4649470000000000000000000000000000000000000000604082015260600190565b60405160208183030381529060405280519060200120604051602001610df1906020808252600f908201527f504f5254464f4c494f5f5641554c540000000000000000000000000000000000604082015260600190565b6040518060800160405280611171604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016111f6604051806102000160405280606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611251604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152600060209091015290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156112b0576112b061125e565b60405290565b604051610140810167ffffffffffffffff811182821017156112b0576112b061125e565b60405160c0810167ffffffffffffffff811182821017156112b0576112b061125e565b604051610120810167ffffffffffffffff811182821017156112b0576112b061125e565b604051610200810167ffffffffffffffff811182821017156112b0576112b061125e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561138c5761138c61125e565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146106f057600080fd5b600067ffffffffffffffff8211156113d0576113d061125e565b5060051b60200190565b600082601f8301126113eb57600080fd5b813560206114006113fb836113b6565b611345565b82815260059290921b8401810191818101908684111561141f57600080fd5b8286015b8481101561144357803561143681611394565b8352918301918301611423565b509695505050505050565b60006020828403121561146057600080fd5b813567ffffffffffffffff8082111561147857600080fd5b908301906040828603121561148c57600080fd5b61149461128d565b823561149f81611394565b81526020830135828111156114b357600080fd5b929092019161014083870312156114c957600080fd5b6114d16112b6565b833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152610100808501358183015250610120808501358481111561153b57600080fd5b611547898288016113da565b9183019190915250602082015295945050505050565b600081518084526020808501945080840160005b838110156115a357815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611571565b509495945050505050565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160c060a08501526115f160e085018261155d565b60a08601518582037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160c0870152805180835290840192506000918401905b808310156114435783518252928401926001929092019190840190611631565b6000610120828403121561166457600080fd5b50919050565b60006020828403121561167c57600080fd5b813567ffffffffffffffff81111561169357600080fd5b82016102a081850312156116a657600080fd5b9392505050565b60006060828403121561166457600080fd5b6000602082840312156116d157600080fd5b813567ffffffffffffffff8111156116e857600080fd5b8201602081850312156116a657600080fd5b60006020828403121561170c57600080fd5b81356116a681611394565b600081518084526020808501945080840160005b838110156115a3578151805115158852838101518489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0808201519089015260e080820151908901526101009081015190880152610120909601959082019060010161172b565b600061020082518185526117b38286018261155d565b915050602083015184820360208601526117cd8282611717565b60408581015190870152606080860151908701526080808601519087015260a0808601519087015260c0808601519087015260e08086015190870152610100808601519087015261012080860151908701526101408086015190870152610160808601519087015261018080860151908701526101a080860151908701526101c080860151908701526101e0948501519490950193909352509192915050565b602081526000825173ffffffffffffffffffffffffffffffffffffffff8151166020840152602081015160408401526040810151606084015260608101516080840152608081015160a084015260a081015160c084015260c081015160e084015260e081015161010081818601528083015161012086015250505060208301516102a0806101408501526119056102c085018361179d565b60408681015180516101608801526020810151610180880152908101516101a08701526060808201516101c088015260808201516101e088015260a082015161020088015260c082015161022088015260e0820151610240880152610100820151610260880152610120909101516102808701529095015173ffffffffffffffffffffffffffffffffffffffff169301929092525090919050565b6000602082840312156119b257600080fd5b5035919050565b6000610140825184526020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518282870152611a2c8387018261155d565b9695505050505050565b6020815260006116a660208301846119b9565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611a7860408301846119b9565b949350505050565b8051611a8b81611394565b919050565b600082601f830112611aa157600080fd5b81516020611ab16113fb836113b6565b82815260059290921b84018101918181019086841115611ad057600080fd5b8286015b84811015611443578051611ae781611394565b8352918301918301611ad4565b600082601f830112611b0557600080fd5b81516020611b156113fb836113b6565b82815260059290921b84018101918181019086841115611b3457600080fd5b8286015b848110156114435780518352918301918301611b38565b600060208284031215611b6157600080fd5b815167ffffffffffffffff80821115611b7957600080fd5b9083019060c08286031215611b8d57600080fd5b611b956112da565b82518152602083015160208201526040830151604082015260608301516060820152608083015182811115611bc957600080fd5b611bd587828601611a90565b60808301525060a083015182811115611bed57600080fd5b611bf987828601611af4565b60a08301525095945050505050565b61012081018235611c1881611394565b73ffffffffffffffffffffffffffffffffffffffff81168352506020830135602083015260408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01833603018112611cbe57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611cfd57600080fd5b830160208101925035905067ffffffffffffffff811115611d1d57600080fd5b8060051b3603821315611d2f57600080fd5b9250929050565b8183526000602080850194508260005b858110156115a3578135611d5981611394565b73ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611d46565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611db657600080fd5b830160208101925035905067ffffffffffffffff811115611dd657600080fd5b61012081023603821315611d2f57600080fd5b80151581146106f057600080fd5b8183526000602080850194508260005b858110156115a3578135611e1a81611de9565b15158752818301358388015260408083013590880152606080830135908801526080808301359088015260a0808301359088015260c0808301359088015260e0808301359088015261010080830135908801526101209687019690910190600101611e07565b602081526000611e908384611cc8565b610200806020860152611ea861022086018385611d36565b9250611eb76020870187611d81565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016040870152611eee848483611df7565b9350506040860135606086015260608601356080860152608086013560a086015260a086013560c086015260c086013560e0860152610100915060e08601358286015261012082870135818701526101409250808701358387015250610160828701358187015261018092508087013583870152506101a082870135818701526101c092508087013583870152506101e0828701358187015280870135828701525050508091505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112611cbe57600080fd5b602081528135602082015260208201356040820152604082013560608201526060820135608082015260006120086080840184611cc8565b60c060a085015261201d60e085018284611d36565b91505061202d60a0850185611cc8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c08601528083527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561208757600080fd5b60051b8082602085013791909101602001949350505050565b6000602082840312156120b257600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126120ee57600080fd5b83018035915067ffffffffffffffff82111561210957600080fd5b6020019150600581901b3603821315611d2f57600080fd5b83815260406020820152600061213b604083018486611d36565b95945050505050565b6000610120828403121561215757600080fd5b61215f6112fd565b61216883611a80565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b8051611a8b81611de9565b600082601f8301126121e257600080fd5b815160206121f26113fb836113b6565b828152610120928302850182019282820191908785111561221257600080fd5b8387015b8581101561229d5781818a03121561222e5760008081fd5b6122366112fd565b61223f826121c6565b8152818601518682015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0808301519082015261010080830151908201528452928401928101612216565b5090979650505050505050565b6000602082840312156122bc57600080fd5b815167ffffffffffffffff808211156122d457600080fd5b9083019061020082860312156122e957600080fd5b6122f1611321565b82518281111561230057600080fd5b61230c87828601611a90565b82525060208301518281111561232157600080fd5b61232d878286016121d1565b60208301525060408381015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e09283015192810192909252509392505050565b600061014082840312156123e557600080fd5b6123ed6112b6565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b60006020828403121561246b57600080fd5b81516116a681611394565b600061010080838503121561248a57600080fd5b6040519081019067ffffffffffffffff821181831017156124ad576124ad61125e565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b60006020828403121561251857600080fd5b815167ffffffffffffffff8082111561253057600080fd5b90830190610140828603121561254557600080fd5b61254d6112b6565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012080840151838111156125b757600080fd5b6125c388828701611a90565b91830191909152509594505050505056fea264697066735822122095bcc11c977204ab0a6bceee9cac0ca5a02ed822458ffae28428c2f1389d938e64736f6c63430008120033";

type ConfigProcessConstructorParams =
  | [linkLibraryAddresses: ConfigProcessLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigProcessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ConfigProcess__factory extends ContractFactory {
  constructor(...args: ConfigProcessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ConfigProcess__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ConfigProcessLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$601b397ac9b288e68d027c499a437c7805\\$__", "g"),
      linkLibraryAddresses["contracts/storage/AppPoolConfig.sol:AppPoolConfig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$403afd1716c71ad05f9fd75974b23df554\\$__", "g"),
      linkLibraryAddresses["contracts/storage/AppConfig.sol:AppConfig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4b57634e6fa94ef3e6c6a2ca1726543a5d\\$__", "g"),
      linkLibraryAddresses[
        "contracts/storage/AppTradeConfig.sol:AppTradeConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$69c89f533e100333dfc56147eb38ab86ce\\$__", "g"),
      linkLibraryAddresses["contracts/storage/UsdPool.sol:UsdPool"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b86ea9efa04d6f44bb6dbbf79511d7094\\$__", "g"),
      linkLibraryAddresses["contracts/storage/AppStorage.sol:AppStorage"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfigProcess & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfigProcess__factory {
    return super.connect(runner) as ConfigProcess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigProcessInterface {
    return new Interface(_abi) as ConfigProcessInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfigProcess {
    return new Contract(address, _abi, runner) as unknown as ConfigProcess;
  }
}

export interface ConfigProcessLibraryAddresses {
  ["contracts/storage/AppPoolConfig.sol:AppPoolConfig"]: string;
  ["contracts/storage/AppConfig.sol:AppConfig"]: string;
  ["contracts/storage/AppTradeConfig.sol:AppTradeConfig"]: string;
  ["contracts/storage/UsdPool.sol:UsdPool"]: string;
  ["contracts/storage/AppStorage.sol:AppStorage"]: string;
}
