/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFaucet,
  IFaucetInterface,
} from "../../../contracts/interfaces/IFaucet";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "mockTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "mintAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "ethAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFaucet.RequestTokensParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "requestTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IFaucet__factory {
  static readonly abi = _abi;
  static createInterface(): IFaucetInterface {
    return new Interface(_abi) as IFaucetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFaucet {
    return new Contract(address, _abi, runner) as unknown as IFaucet;
  }
}
