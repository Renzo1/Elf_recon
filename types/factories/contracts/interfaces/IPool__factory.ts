/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPool,
  IPoolInterface,
} from "../../../contracts/interfaces/IPool";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "getAllPools",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "stakeTokenName",
            type: "string",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance",
            name: "baseTokenBalance",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "stableTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance[]",
            name: "stableTokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "poolValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "poolPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRealizedBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeBorrowingFeePerToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTime",
                type: "uint256",
              },
            ],
            internalType: "struct LpPool.BorrowingFee",
            name: "borrowingFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimedRewards",
            type: "uint256",
          },
        ],
        internalType: "struct IPool.PoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "stakeTokenName",
            type: "string",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance",
            name: "baseTokenBalance",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "stableTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance[]",
            name: "stableTokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "poolValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "poolPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRealizedBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeBorrowingFeePerToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTime",
                type: "uint256",
              },
            ],
            internalType: "struct LpPool.BorrowingFee",
            name: "borrowingFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimedRewards",
            type: "uint256",
          },
        ],
        internalType: "struct IPool.PoolInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "getPoolWithOracle",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "stakeTokenName",
            type: "string",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance",
            name: "baseTokenBalance",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "stableTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liability",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "unsettledAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "lossAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "collateralTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "collateralAmounts",
                type: "uint256[]",
              },
            ],
            internalType: "struct IPool.MintTokenBalance[]",
            name: "stableTokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "poolValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "poolPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRealizedBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeBorrowingFeePerToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTime",
                type: "uint256",
              },
            ],
            internalType: "struct LpPool.BorrowingFee",
            name: "borrowingFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimedRewards",
            type: "uint256",
          },
        ],
        internalType: "struct IPool.PoolInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdPool",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "stableTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unsettledAmount",
                type: "uint256",
              },
            ],
            internalType: "struct UsdPool.TokenBalance[]",
            name: "stableTokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "uint256[]",
            name: "stableTokenMaxWithdraws",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "poolValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "tokensAvailableLiquidity",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRealizedBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeBorrowingFeePerToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTime",
                type: "uint256",
              },
            ],
            internalType: "struct UsdPool.BorrowingFee[]",
            name: "borrowingFees",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimedRewards",
            type: "uint256",
          },
        ],
        internalType: "struct IPool.UsdPoolInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "minPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPrice",
            type: "int256",
          },
        ],
        internalType: "struct OracleProcess.OracleParam[]",
        name: "oracles",
        type: "tuple[]",
      },
    ],
    name: "getUsdPoolWithOracle",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "stableTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "holdAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unsettledAmount",
                type: "uint256",
              },
            ],
            internalType: "struct UsdPool.TokenBalance[]",
            name: "stableTokenBalances",
            type: "tuple[]",
          },
          {
            internalType: "uint256[]",
            name: "stableTokenMaxWithdraws",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "poolValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "tokensAvailableLiquidity",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRealizedBorrowingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeBorrowingFeePerToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTime",
                type: "uint256",
              },
            ],
            internalType: "struct UsdPool.BorrowingFee[]",
            name: "borrowingFees",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimedRewards",
            type: "uint256",
          },
        ],
        internalType: "struct IPool.UsdPoolInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPool__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolInterface {
    return new Interface(_abi) as IPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPool {
    return new Contract(address, _abi, runner) as unknown as IPool;
  }
}
