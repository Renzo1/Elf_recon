{"abi":[{"type":"function","name":"aggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"aggregate3","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"aggregate3Value","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3Value[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"blockAndAggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"getBasefee","inputs":[],"outputs":[{"name":"basefee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockHash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"chainid","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockCoinbase","inputs":[],"outputs":[{"name":"coinbase","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockGasLimit","inputs":[],"outputs":[{"name":"gaslimit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockPrevrandao","inputs":[],"outputs":[{"name":"prevrandao","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEthBalance","inputs":[{"name":"addr","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastBlockHash","inputs":[],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"tryAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"tryBlockAndAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b50610cd18061001f6000396000f3fe6080604052600436106100f35760003560e01c806342cbb15c1161008a578063a8b0574e11610059578063a8b0574e1461022f578063bce38bd71461024a578063c3077fa91461025d578063ee82ac5e1461027057600080fd5b806342cbb15c146101ce5780634d2301cc146101e157806382ad56cb1461020957806386d516e81461021c57600080fd5b806327e86d6e116100c657806327e86d6e1461016e5780633408e47014610186578063399542e9146101995780633e64a696146101bb57600080fd5b80630ec6ce34146100f85780630f28c97d1461011a578063174dea711461012d578063252dba421461014d575b600080fd5b34801561010457600080fd5b50445b6040519081526020015b60405180910390f35b34801561012657600080fd5b5042610107565b61014061013b36600461098c565b61028f565b6040516101119190610a82565b61016061015b36600461098c565b61047d565b604051610111929190610a9c565b34801561017a57600080fd5b50436000190140610107565b34801561019257600080fd5b5046610107565b6101ac6101a7366004610b08565b6105f1565b60405161011193929190610b62565b3480156101c757600080fd5b5048610107565b3480156101da57600080fd5b5043610107565b3480156101ed57600080fd5b506101076101fc366004610b8a565b6001600160a01b03163190565b61014061021736600461098c565b61060c565b34801561022857600080fd5b5045610107565b34801561023b57600080fd5b50604051418152602001610111565b610140610258366004610b08565b61078e565b6101ac61026b36600461098c565b610921565b34801561027c57600080fd5b5061010761028b366004610bb3565b4090565b60606000828067ffffffffffffffff8111156102ad576102ad610bcc565b6040519080825280602002602001820160405280156102f357816020015b6040805180820190915260008152606060208201528152602001906001900390816102cb5790505b5092503660005b8281101561041f57600085828151811061031657610316610be2565b6020026020010151905087878381811061033257610332610be2565b90506020028101906103449190610bf8565b60408101359586019590935061035d6020850185610b8a565b6001600160a01b0316816103746060870187610c18565b604051610382929190610c5f565b60006040518083038185875af1925050503d80600081146103bf576040519150601f19603f3d011682016040523d82523d6000602084013e6103c4565b606091505b5060208085019190915290151580845290850135176104155762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b50506001016102fa565b508234146104745760405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b436060828067ffffffffffffffff81111561049a5761049a610bcc565b6040519080825280602002602001820160405280156104cd57816020015b60608152602001906001900390816104b85790505b5091503660005b828110156105e75760008787838181106104f0576104f0610be2565b90506020028101906105029190610c6f565b92506105116020840184610b8a565b6001600160a01b03166105276020850185610c18565b604051610535929190610c5f565b6000604051808303816000865af19150503d8060008114610572576040519150601f19603f3d011682016040523d82523d6000602084013e610577565b606091505b5086848151811061058a5761058a610be2565b60209081029190910101529050806105de5760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b604482015260640161046b565b506001016104d4565b5050509250929050565b438040606061060186868661078e565b905093509350939050565b6060818067ffffffffffffffff81111561062857610628610bcc565b60405190808252806020026020018201604052801561066e57816020015b6040805180820190915260008152606060208201528152602001906001900390816106465790505b5091503660005b8281101561047457600084828151811061069157610691610be2565b602002602001015190508686838181106106ad576106ad610be2565b90506020028101906106bf9190610c85565b92506106ce6020840184610b8a565b6001600160a01b03166106e46040850185610c18565b6040516106f2929190610c5f565b6000604051808303816000865af19150503d806000811461072f576040519150601f19603f3d011682016040523d82523d6000602084013e610734565b606091505b5060208084019190915290151580835290840135176107855762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b50600101610675565b6060818067ffffffffffffffff8111156107aa576107aa610bcc565b6040519080825280602002602001820160405280156107f057816020015b6040805180820190915260008152606060208201528152602001906001900390816107c85790505b5091503660005b8281101561091757600084828151811061081357610813610be2565b6020026020010151905086868381811061082f5761082f610be2565b90506020028101906108419190610c6f565b92506108506020840184610b8a565b6001600160a01b03166108666020850185610c18565b604051610874929190610c5f565b6000604051808303816000865af19150503d80600081146108b1576040519150601f19603f3d011682016040523d82523d6000602084013e6108b6565b606091505b50602083015215158152871561090e57805161090e5760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b604482015260640161046b565b506001016107f7565b5050509392505050565b6000806060610932600186866105f1565b919790965090945092505050565b60008083601f84011261095257600080fd5b50813567ffffffffffffffff81111561096a57600080fd5b6020830191508360208260051b850101111561098557600080fd5b9250929050565b6000806020838503121561099f57600080fd5b823567ffffffffffffffff8111156109b657600080fd5b6109c285828601610940565b90969095509350505050565b6000815180845260005b818110156109f4576020818501810151868301820152016109d8565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b84811015610a7557858303601f1901895281518051151584528401516040858501819052610a61818601836109ce565b9a86019a9450505090830190600101610a31565b5090979650505050505050565b602081526000610a956020830184610a14565b9392505050565b60006040820184835260206040602085015281855180845260608601915060608160051b87010193506020870160005b82811015610afa57605f19888703018452610ae88683516109ce565b95509284019290840190600101610acc565b509398975050505050505050565b600080600060408486031215610b1d57600080fd5b83358015158114610b2d57600080fd5b9250602084013567ffffffffffffffff811115610b4957600080fd5b610b5586828701610940565b9497909650939450505050565b838152826020820152606060408201526000610b816060830184610a14565b95945050505050565b600060208284031215610b9c57600080fd5b81356001600160a01b0381168114610a9557600080fd5b600060208284031215610bc557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610c0e57600080fd5b9190910192915050565b6000808335601e19843603018112610c2f57600080fd5b83018035915067ffffffffffffffff821115610c4a57600080fd5b60200191503681900382131561098557600080fd5b8183823760009101908152919050565b60008235603e19833603018112610c0e57600080fd5b60008235605e19833603018112610c0e57600080fdfea2646970667358221220ff3ff668ad1750e4a53aedb113a53a25a52aa7c481fcf32a6a2136a2c7f9e09b64736f6c63430008190033","sourceMap":"503:9295:44:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106100f35760003560e01c806342cbb15c1161008a578063a8b0574e11610059578063a8b0574e1461022f578063bce38bd71461024a578063c3077fa91461025d578063ee82ac5e1461027057600080fd5b806342cbb15c146101ce5780634d2301cc146101e157806382ad56cb1461020957806386d516e81461021c57600080fd5b806327e86d6e116100c657806327e86d6e1461016e5780633408e47014610186578063399542e9146101995780633e64a696146101bb57600080fd5b80630ec6ce34146100f85780630f28c97d1461011a578063174dea711461012d578063252dba421461014d575b600080fd5b34801561010457600080fd5b50445b6040519081526020015b60405180910390f35b34801561012657600080fd5b5042610107565b61014061013b36600461098c565b61028f565b6040516101119190610a82565b61016061015b36600461098c565b61047d565b604051610111929190610a9c565b34801561017a57600080fd5b50436000190140610107565b34801561019257600080fd5b5046610107565b6101ac6101a7366004610b08565b6105f1565b60405161011193929190610b62565b3480156101c757600080fd5b5048610107565b3480156101da57600080fd5b5043610107565b3480156101ed57600080fd5b506101076101fc366004610b8a565b6001600160a01b03163190565b61014061021736600461098c565b61060c565b34801561022857600080fd5b5045610107565b34801561023b57600080fd5b50604051418152602001610111565b610140610258366004610b08565b61078e565b6101ac61026b36600461098c565b610921565b34801561027c57600080fd5b5061010761028b366004610bb3565b4090565b60606000828067ffffffffffffffff8111156102ad576102ad610bcc565b6040519080825280602002602001820160405280156102f357816020015b6040805180820190915260008152606060208201528152602001906001900390816102cb5790505b5092503660005b8281101561041f57600085828151811061031657610316610be2565b6020026020010151905087878381811061033257610332610be2565b90506020028101906103449190610bf8565b60408101359586019590935061035d6020850185610b8a565b6001600160a01b0316816103746060870187610c18565b604051610382929190610c5f565b60006040518083038185875af1925050503d80600081146103bf576040519150601f19603f3d011682016040523d82523d6000602084013e6103c4565b606091505b5060208085019190915290151580845290850135176104155762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b50506001016102fa565b508234146104745760405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b436060828067ffffffffffffffff81111561049a5761049a610bcc565b6040519080825280602002602001820160405280156104cd57816020015b60608152602001906001900390816104b85790505b5091503660005b828110156105e75760008787838181106104f0576104f0610be2565b90506020028101906105029190610c6f565b92506105116020840184610b8a565b6001600160a01b03166105276020850185610c18565b604051610535929190610c5f565b6000604051808303816000865af19150503d8060008114610572576040519150601f19603f3d011682016040523d82523d6000602084013e610577565b606091505b5086848151811061058a5761058a610be2565b60209081029190910101529050806105de5760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b604482015260640161046b565b506001016104d4565b5050509250929050565b438040606061060186868661078e565b905093509350939050565b6060818067ffffffffffffffff81111561062857610628610bcc565b60405190808252806020026020018201604052801561066e57816020015b6040805180820190915260008152606060208201528152602001906001900390816106465790505b5091503660005b8281101561047457600084828151811061069157610691610be2565b602002602001015190508686838181106106ad576106ad610be2565b90506020028101906106bf9190610c85565b92506106ce6020840184610b8a565b6001600160a01b03166106e46040850185610c18565b6040516106f2929190610c5f565b6000604051808303816000865af19150503d806000811461072f576040519150601f19603f3d011682016040523d82523d6000602084013e610734565b606091505b5060208084019190915290151580835290840135176107855762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b50600101610675565b6060818067ffffffffffffffff8111156107aa576107aa610bcc565b6040519080825280602002602001820160405280156107f057816020015b6040805180820190915260008152606060208201528152602001906001900390816107c85790505b5091503660005b8281101561091757600084828151811061081357610813610be2565b6020026020010151905086868381811061082f5761082f610be2565b90506020028101906108419190610c6f565b92506108506020840184610b8a565b6001600160a01b03166108666020850185610c18565b604051610874929190610c5f565b6000604051808303816000865af19150503d80600081146108b1576040519150601f19603f3d011682016040523d82523d6000602084013e6108b6565b606091505b50602083015215158152871561090e57805161090e5760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b604482015260640161046b565b506001016107f7565b5050509392505050565b6000806060610932600186866105f1565b919790965090945092505050565b60008083601f84011261095257600080fd5b50813567ffffffffffffffff81111561096a57600080fd5b6020830191508360208260051b850101111561098557600080fd5b9250929050565b6000806020838503121561099f57600080fd5b823567ffffffffffffffff8111156109b657600080fd5b6109c285828601610940565b90969095509350505050565b6000815180845260005b818110156109f4576020818501810151868301820152016109d8565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b84811015610a7557858303601f1901895281518051151584528401516040858501819052610a61818601836109ce565b9a86019a9450505090830190600101610a31565b5090979650505050505050565b602081526000610a956020830184610a14565b9392505050565b60006040820184835260206040602085015281855180845260608601915060608160051b87010193506020870160005b82811015610afa57605f19888703018452610ae88683516109ce565b95509284019290840190600101610acc565b509398975050505050505050565b600080600060408486031215610b1d57600080fd5b83358015158114610b2d57600080fd5b9250602084013567ffffffffffffffff811115610b4957600080fd5b610b5586828701610940565b9497909650939450505050565b838152826020820152606060408201526000610b816060830184610a14565b95945050505050565b600060208284031215610b9c57600080fd5b81356001600160a01b0381168114610a9557600080fd5b600060208284031215610bc557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610c0e57600080fd5b9190910192915050565b6000808335601e19843603018112610c2f57600080fd5b83018035915067ffffffffffffffff821115610c4a57600080fd5b60200191503681900382131561098557600080fd5b8183823760009101908152919050565b60008235603e19833603018112610c0e57600080fd5b60008235605e19833603018112610c0e57600080fdfea2646970667358221220ff3ff668ad1750e4a53aedb113a53a25a52aa7c481fcf32a6a2136a2c7f9e09b64736f6c63430008190033","sourceMap":"503:9295:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8545:124;;;;;;;;;;-1:-1:-1;8646:16:44;8545:124;;;160:25:142;;;148:2;133:18;8545:124:44;;;;;;;;8885:120;;;;;;;;;;-1:-1:-1;8983:15:44;8885:120;;5905:2016;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1167:559::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9249:158::-;;;;;;;;;;-1:-1:-1;9373:12:44;-1:-1:-1;;9373:16:44;9363:27;9249:158;;9696:100;;;;;;;;;;-1:-1:-1;9776:13:44;9696:100;;3005:334;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9553:100::-;;;;;;;;;;-1:-1:-1;9633:13:44;9553:100;;8218:111;;;;;;;;;;-1:-1:-1;8310:12:44;8218:111;;9072:114;;;;;;;;;;-1:-1:-1;9072:114:44;;;;;:::i;:::-;-1:-1:-1;;;;;9167:12:44;;;9072:114;4148:1519;;;;;;:::i;:::-;;:::i;8719:116::-;;;;;;;;;;-1:-1:-1;8814:14:44;8719:116;;8378;;;;;;;;;;-1:-1:-1;8378:116:44;;8473:14;6214:51:142;;6202:2;6187:18;8378:116:44;6068:203:142;2011:612:44;;;;;;:::i;:::-;;:::i;3721:245::-;;;;;;:::i;:::-;;:::i;8037:134::-;;;;;;;;;;-1:-1:-1;8037:134:44;;;;;:::i;:::-;8142:22;;8037:134;5905:2016;5983:26;6021:22;6070:5;;6105:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6105:20:44;;;;;;;;;;;;;;;;6092:33;;6135:25;6175:9;6170:1600;6190:6;6186:1;:10;6170:1600;;;6214:20;6237:10;6248:1;6237:13;;;;;;;;:::i;:::-;;;;;;;6214:36;;6272:5;;6278:1;6272:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6308:11;;;;6536:21;;;;6264:16;;-1:-1:-1;6623:12:44;;;;6264:16;6623:12;:::i;:::-;-1:-1:-1;;;;;6623:17:44;6649:3;6655:14;;;;:5;:14;:::i;:::-;6623:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6602:17:44;;;;6585:85;;;;;;;;;;6907:16;;;6894:30;6891:49;6881:806;;-1:-1:-1;;;7069:4:44;7062:80;7215:66;7209:4;7202:80;7367:66;7361:4;7354:80;-1:-1:-1;;;7557:4:44;7550:80;7664:4;7658;7651:18;6881:806;-1:-1:-1;;7742:3:44;;6170:1600;;;;7869:14;7856:9;:27;7848:66;;;;-1:-1:-1;;;7848:66:44;;8062:2:142;7848:66:44;;;8044:21:142;8101:2;8081:18;;;8074:30;8140:28;8120:18;;;8113:56;8186:18;;7848:66:44;;;;;;;;;6011:1910;;;5905:2016;;;;:::o;1167:559::-;1305:12;1254:25;1344:5;;1379:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:32;;1408:18;1441:9;1436:284;1456:6;1452:1;:10;1436:284;;;1480:12;1513:5;;1519:1;1513:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1506:15;-1:-1:-1;1562:11:44;;;;1506:15;1562:11;:::i;:::-;-1:-1:-1;;;;;1562:16:44;1579:13;;;;:4;:13;:::i;:::-;1562:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:10;1556:1;1545:13;;;;;;;;:::i;:::-;;;;;;;;;;1535:58;;-1:-1:-1;1535:58:44;1607:43;;;;-1:-1:-1;;;1607:43:44;;8743:2:142;1607:43:44;;;8725:21:142;8782:2;8762:18;;;8755:30;-1:-1:-1;;;8801:18:142;;;8794:53;8864:18;;1607:43:44;8541:347:142;1607:43:44;-1:-1:-1;1692:3:44;;1436:284;;;;1281:445;;1167:559;;;;;:::o;3005:334::-;3217:12;3251:23;;3165:26;3297:35;3310:14;3326:5;;3297:12;:35::i;:::-;3284:48;;3005:334;;;;;;;:::o;4148:1519::-;4216:26;4271:5;;4306:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;4306:20:44;;;;;;;;;;;;;;;;4293:33;;4336:20;4371:9;4366:1295;4386:6;4382:1;:10;4366:1295;;;4410:20;4433:10;4444:1;4433:13;;;;;;;;:::i;:::-;;;;;;;4410:36;;4468:5;;4474:1;4468:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4460:16;-1:-1:-1;4528:12:44;;;;4460:16;4528:12;:::i;:::-;-1:-1:-1;;;;;4528:17:44;4546:14;;;;:5;:14;:::i;:::-;4528:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4507:17:44;;;;4490:71;;;;;;;;;;4798:16;;;4785:30;4782:49;4772:806;;-1:-1:-1;;;4960:4:44;4953:80;5106:66;5100:4;5093:80;5258:66;5252:4;5245:80;-1:-1:-1;;;5448:4:44;5441:80;5555:4;5549;5542:18;4772:806;-1:-1:-1;5633:3:44;;4366:1295;;2011:612;2123:26;2178:5;;2213:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2213:20:44;;;;;;;;;;;;;;;;2200:33;;2243:18;2276:9;2271:346;2291:6;2287:1;:10;2271:346;;;2315:20;2338:10;2349:1;2338:13;;;;;;;;:::i;:::-;;;;;;;2315:36;;2372:5;;2378:1;2372:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2365:15;-1:-1:-1;2432:11:44;;;;2365:15;2432:11;:::i;:::-;-1:-1:-1;;;;;2432:16:44;2449:13;;;;:4;:13;:::i;:::-;2432:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2411:17:44;;;2394:69;;;;;2477:70;;;;2505:14;;2497:50;;;;-1:-1:-1;;;2497:50:44;;8743:2:142;2497:50:44;;;8725:21:142;8782:2;8762:18;;;8755:30;-1:-1:-1;;;8801:18:142;;;8794:53;8864:18;;2497:50:44;8541:347:142;2497:50:44;-1:-1:-1;2589:3:44;;2271:346;;;;2151:472;;2011:612;;;;;:::o;3721:245::-;3809:19;3830:17;3849:26;3926:33;3947:4;3953:5;;3926:20;:33::i;:::-;3887:72;;;;-1:-1:-1;3887:72:44;;-1:-1:-1;3721:245:44;-1:-1:-1;;;3721:245:44:o;196:386:142:-;278:8;288:6;342:3;335:4;327:6;323:17;319:27;309:55;;360:1;357;350:12;309:55;-1:-1:-1;383:20:142;;426:18;415:30;;412:50;;;458:1;455;448:12;412:50;495:4;487:6;483:17;471:29;;555:3;548:4;538:6;535:1;531:14;523:6;519:27;515:38;512:47;509:67;;;572:1;569;562:12;509:67;196:386;;;;;:::o;587:486::-;703:6;711;764:2;752:9;743:7;739:23;735:32;732:52;;;780:1;777;770:12;732:52;820:9;807:23;853:18;845:6;842:30;839:50;;;885:1;882;875:12;839:50;924:89;1005:7;996:6;985:9;981:22;924:89;:::i;:::-;1032:8;;898:115;;-1:-1:-1;587:486:142;-1:-1:-1;;;;587:486:142:o;1078:422::-;1119:3;1157:5;1151:12;1184:6;1179:3;1172:19;1209:1;1219:162;1233:6;1230:1;1227:13;1219:162;;;1295:4;1351:13;;;1347:22;;1341:29;1323:11;;;1319:20;;1312:59;1248:12;1219:162;;;1223:3;1426:1;1419:4;1410:6;1405:3;1401:16;1397:27;1390:38;1489:4;1482:2;1478:7;1473:2;1465:6;1461:15;1457:29;1452:3;1448:39;1444:50;1437:57;;;1078:422;;;;:::o;1505:810::-;1564:3;1595;1627:5;1621:12;1654:6;1649:3;1642:19;1680:4;1709:2;1704:3;1700:12;1693:19;;1765:2;1755:6;1752:1;1748:14;1741:5;1737:26;1733:35;1802:2;1795:5;1791:14;1823:1;1833:456;1847:6;1844:1;1841:13;1833:456;;;1912:16;;;-1:-1:-1;;1908:30:142;1896:43;;1962:13;;2042:9;;2035:17;2028:25;2015:39;;2093:11;;2087:18;1998:4;2125:13;;;2118:25;;;2164:45;2195:13;;;2087:18;2164:45;:::i;:::-;2267:12;;;;2156:53;-1:-1:-1;;;2232:15:142;;;;1869:1;1862:9;1833:456;;;-1:-1:-1;2305:4:142;;1505:810;-1:-1:-1;;;;;;;1505:810:142:o;2320:315::-;2547:2;2536:9;2529:21;2510:4;2567:62;2625:2;2614:9;2610:18;2602:6;2567:62;:::i;:::-;2559:70;2320:315;-1:-1:-1;;;2320:315:142:o;3125:871::-;3313:4;3361:2;3350:9;3346:18;3391:6;3380:9;3373:25;3417:2;3455;3450;3439:9;3435:18;3428:30;3478:6;3513;3507:13;3544:6;3536;3529:22;3582:2;3571:9;3567:18;3560:25;;3644:2;3634:6;3631:1;3627:14;3616:9;3612:30;3608:39;3594:53;;3682:2;3674:6;3670:15;3703:1;3713:254;3727:6;3724:1;3721:13;3713:254;;;3820:2;3816:7;3804:9;3796:6;3792:22;3788:36;3783:3;3776:49;3848:39;3880:6;3871;3865:13;3848:39;:::i;:::-;3838:49;-1:-1:-1;3945:12:142;;;;3910:15;;;;3749:1;3742:9;3713:254;;;-1:-1:-1;3984:6:142;;3125:871;-1:-1:-1;;;;;;;;3125:871:142:o;4183:641::-;4299:6;4307;4315;4368:2;4356:9;4347:7;4343:23;4339:32;4336:52;;;4384:1;4381;4374:12;4336:52;4423:9;4410:23;4476:5;4469:13;4462:21;4455:5;4452:32;4442:60;;4498:1;4495;4488:12;4442:60;4521:5;-1:-1:-1;4577:2:142;4562:18;;4549:32;4604:18;4593:30;;4590:50;;;4636:1;4633;4626:12;4590:50;4675:89;4756:7;4747:6;4736:9;4732:22;4675:89;:::i;:::-;4183:641;;4783:8;;-1:-1:-1;4649:115:142;;-1:-1:-1;;;;4183:641:142:o;4829:457::-;5112:6;5101:9;5094:25;5155:6;5150:2;5139:9;5135:18;5128:34;5198:2;5193;5182:9;5178:18;5171:30;5075:4;5218:62;5276:2;5265:9;5261:18;5253:6;5218:62;:::i;:::-;5210:70;4829:457;-1:-1:-1;;;;;4829:457:142:o;5291:286::-;5350:6;5403:2;5391:9;5382:7;5378:23;5374:32;5371:52;;;5419:1;5416;5409:12;5371:52;5445:23;;-1:-1:-1;;;;;5497:31:142;;5487:42;;5477:70;;5543:1;5540;5533:12;6276:180;6335:6;6388:2;6376:9;6367:7;6363:23;6359:32;6356:52;;;6404:1;6401;6394:12;6356:52;-1:-1:-1;6427:23:142;;6276:180;-1:-1:-1;6276:180:142:o;6461:127::-;6522:10;6517:3;6513:20;6510:1;6503:31;6553:4;6550:1;6543:15;6577:4;6574:1;6567:15;6593:127;6654:10;6649:3;6645:20;6642:1;6635:31;6685:4;6682:1;6675:15;6709:4;6706:1;6699:15;6725:328;6821:4;6879:11;6866:25;6973:3;6969:8;6958;6942:14;6938:29;6934:44;6914:18;6910:69;6900:97;;6993:1;6990;6983:12;6900:97;7014:33;;;;;6725:328;-1:-1:-1;;6725:328:142:o;7058:521::-;7135:4;7141:6;7201:11;7188:25;7295:2;7291:7;7280:8;7264:14;7260:29;7256:43;7236:18;7232:68;7222:96;;7314:1;7311;7304:12;7222:96;7341:33;;7393:20;;;-1:-1:-1;7436:18:142;7425:30;;7422:50;;;7468:1;7465;7458:12;7422:50;7501:4;7489:17;;-1:-1:-1;7532:14:142;7528:27;;;7518:38;;7515:58;;;7569:1;7566;7559:12;7584:271;7767:6;7759;7754:3;7741:33;7723:3;7793:16;;7818:13;;;7793:16;7584:271;-1:-1:-1;7584:271:142:o;8215:321::-;8305:4;8363:11;8350:25;8457:2;8453:7;8442:8;8426:14;8422:29;8418:43;8398:18;8394:68;8384:96;;8476:1;8473;8466:12;8893:322;8984:4;9042:11;9029:25;9136:2;9132:7;9121:8;9105:14;9101:29;9097:43;9077:18;9073:68;9063:96;;9155:1;9152;9145:12","linkReferences":{}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","aggregate3((address,bool,bytes)[])":"82ad56cb","aggregate3Value((address,bool,uint256,bytes)[])":"174dea71","blockAndAggregate((address,bytes)[])":"c3077fa9","getBasefee()":"3e64a696","getBlockHash(uint256)":"ee82ac5e","getBlockNumber()":"42cbb15c","getChainId()":"3408e470","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockPrevrandao()":"0ec6ce34","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e","tryAggregate(bool,(address,bytes)[])":"bce38bd7","tryBlockAndAggregate(bool,(address,bytes)[])":"399542e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockPrevrandao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prevrandao\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>Andreas Bigger <andreas@nascent.xyz>Matt Solomon <matt@mattsolomon.dev>\",\"details\":\"Multicall & Multicall2 backwards-compatibleAggregate methods are marked `payable` to save 24 gas per call\",\"kind\":\"dev\",\"methods\":{\"aggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of bytes containing the responses\"}},\"aggregate3((address,bool,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3 structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3Value structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"blockAndAggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}},\"getBlockHash(uint256)\":{\"params\":{\"blockNumber\":\"The block number\"}},\"tryAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\",\"requireSuccess\":\"If true, require all calls to succeed\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}}},\"title\":\"Multicall3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible call aggregation with Multicall\"},\"aggregate3((address,bool,bytes)[])\":{\"notice\":\"Aggregate calls, ensuring each returns success if required\"},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"notice\":\"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values\"},\"blockAndAggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"},\"getBasefee()\":{\"notice\":\"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain\"},\"getBlockHash(uint256)\":{\"notice\":\"Returns the block hash for the given block number\"},\"getBlockNumber()\":{\"notice\":\"Returns the block number\"},\"getChainId()\":{\"notice\":\"Returns the chain id\"},\"getCurrentBlockCoinbase()\":{\"notice\":\"Returns the block coinbase\"},\"getCurrentBlockGasLimit()\":{\"notice\":\"Returns the block gas limit\"},\"getCurrentBlockPrevrandao()\":{\"notice\":\"Returns the block prevrandao\"},\"getCurrentBlockTimestamp()\":{\"notice\":\"Returns the block timestamp\"},\"getEthBalance(address)\":{\"notice\":\"Returns the (ETH) balance of a given address\"},\"getLastBlockHash()\":{\"notice\":\"Returns the block hash of the last block\"},\"tryAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls without requiring success\"},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"}},\"notice\":\"Aggregate results from multiple function calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/Multicall3.sol\":\"Multicall3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/mock/Multicall3.sol\":{\"keccak256\":\"0x891806f4d01c7c2b45a0f367bad82696c9de12a7cea8a40698ec15ff359a5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e794c78052a681f7b51e41421d31d8338a482abd138fb47437b8147e9bcf74\",\"dweb:/ipfs/Qmd89RvpM6yEDVDu7QfoCALa8zJwoARsk47oaFpRJ6HJ7Q\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"struct Multicall3.Call3[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call3Value[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3Value","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBasefee","outputs":[{"internalType":"uint256","name":"basefee","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"chainid","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockPrevrandao","outputs":[{"internalType":"uint256","name":"prevrandao","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"view","type":"function","name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryAggregate","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]}],"devdoc":{"kind":"dev","methods":{"aggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockNumber":"The block number where the calls were executed","returnData":"An array of bytes containing the responses"}},"aggregate3((address,bool,bytes)[])":{"params":{"calls":"An array of Call3 structs"},"returns":{"returnData":"An array of Result structs"}},"aggregate3Value((address,bool,uint256,bytes)[])":{"params":{"calls":"An array of Call3Value structs"},"returns":{"returnData":"An array of Result structs"}},"blockAndAggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}},"getBlockHash(uint256)":{"params":{"blockNumber":"The block number"}},"tryAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs","requireSuccess":"If true, require all calls to succeed"},"returns":{"returnData":"An array of Result structs"}},"tryBlockAndAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregate((address,bytes)[])":{"notice":"Backwards-compatible call aggregation with Multicall"},"aggregate3((address,bool,bytes)[])":{"notice":"Aggregate calls, ensuring each returns success if required"},"aggregate3Value((address,bool,uint256,bytes)[])":{"notice":"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values"},"blockAndAggregate((address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"},"getBasefee()":{"notice":"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain"},"getBlockHash(uint256)":{"notice":"Returns the block hash for the given block number"},"getBlockNumber()":{"notice":"Returns the block number"},"getChainId()":{"notice":"Returns the chain id"},"getCurrentBlockCoinbase()":{"notice":"Returns the block coinbase"},"getCurrentBlockGasLimit()":{"notice":"Returns the block gas limit"},"getCurrentBlockPrevrandao()":{"notice":"Returns the block prevrandao"},"getCurrentBlockTimestamp()":{"notice":"Returns the block timestamp"},"getEthBalance(address)":{"notice":"Returns the (ETH) balance of a given address"},"getLastBlockHash()":{"notice":"Returns the block hash of the last block"},"tryAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls without requiring success"},"tryBlockAndAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/mock/Multicall3.sol":"Multicall3"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/mock/Multicall3.sol":{"keccak256":"0x891806f4d01c7c2b45a0f367bad82696c9de12a7cea8a40698ec15ff359a5c76","urls":["bzz-raw://e6e794c78052a681f7b51e41421d31d8338a482abd138fb47437b8147e9bcf74","dweb:/ipfs/Qmd89RvpM6yEDVDu7QfoCALa8zJwoARsk47oaFpRJ6HJ7Q"],"license":"MIT"}},"version":1},"id":44}